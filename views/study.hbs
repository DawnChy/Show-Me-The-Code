<div class="container">
    <div class="page-header">
        <h1>开始学习吧！</h1>
    </div>
    <div>
        <ul class="nav nav-tabs" role="tablist">
            <li><a href="javascript:;"><span class="glyphicon glyphicon-th-list" aria-hidden="true"></span> GO!</a></li>
            <li role="presentation" class="active"><a href="#html" aria-controls="home" role="tab" data-toggle="tab">HTML/HTML5</a></li>
            <li role="presentation"><a href="#css" aria-controls="css" role="tab" data-toggle="tab">CSS/CSS3</a></li>
            <li role="presentation"><a href="#javascript" aria-controls="javascript" role="tab" data-toggle="tab">JavaScript</a></li>
            <li role="presentation"><a href="#database" aria-controls="database" role="tab" data-toggle="tab">数据库</a></li>
            <li role="presentation"><a href="#tools" aria-controls="tools" role="tab" data-toggle="tab">开发工具</a></li>
            <li role="presentation"><a href="#text" aria-controls="text" role="tab" data-toggle="tab">笔记/实例</a></li>
        </ul>
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane active" id="html">
                <div>
                    <ul class="nav nav-pills study_nav" role="tablist">
                        <li><h2><b>HTML</b></h2></li>
                        <li role="presentation" class="active"><a href="#h1" aria-controls="home" role="tab" data-toggle="tab">HTML 教学</a></li>
                        <li role="presentation"><a href="#h2" aria-controls="profile" role="tab" data-toggle="tab">HTML 基础</a></li>
                        <li role="presentation"><a href="#h3" aria-controls="messages" role="tab" data-toggle="tab">HTML 元素</a></li>
                        <li role="presentation"><a href="#h4" aria-controls="settings" role="tab" data-toggle="tab">HTML 属性</a></li>
                        <li role="presentation"><a href="#h5" aria-controls="settings" role="tab" data-toggle="tab">HTML 标题、段落</a></li>
                        <li role="presentation"><a href="#h6" aria-controls="settings" role="tab" data-toggle="tab">HTML 链接</a></li>
                        <li role="presentation"><a href="#h7" aria-controls="settings" role="tab" data-toggle="tab">HTML 头部</a></li>
                        <li role="presentation"><a href="#h8" aria-controls="settings" role="tab" data-toggle="tab">HTML CSS</a></li>
                        <li role="presentation"><a href="#h9" aria-controls="settings" role="tab" data-toggle="tab">HTML 图像</a></li>
                        <li role="presentation"><a href="#h10" aria-controls="settings" role="tab" data-toggle="tab">HTML 表格</a></li>
                        <li role="presentation"><a href="#h11" aria-controls="settings" role="tab" data-toggle="tab">HTML 列表</a></li>
                        <li role="presentation"><a href="#h12" aria-controls="settings" role="tab" data-toggle="tab">HTML 区块</a></li>
                        <li role="presentation"><a href="#h13" aria-controls="settings" role="tab" data-toggle="tab">HTML 表单</a></li>
                        <li role="presentation"><a href="#h14" aria-controls="settings" role="tab" data-toggle="tab">HTML 脚本</a></li>
                        <li role="presentation"><a href="#h15" aria-controls="settings" role="tab" data-toggle="tab">HTML 总结</a></li>
                        <li>&nbsp;</li>
                        <li><h2><b>HTML5</b></h2></li>
                        <li role="presentation"><a href="#h16" aria-controls="settings" role="tab" data-toggle="tab">HTML5 教学</a></li>
                        <li role="presentation"><a href="#h17" aria-controls="settings" role="tab" data-toggle="tab">HTML5 浏览器支持</a></li>
                        <li role="presentation"><a href="#h18" aria-controls="settings" role="tab" data-toggle="tab">HTML5 新元素</a></li>
                        <li role="presentation"><a href="#h19" aria-controls="settings" role="tab" data-toggle="tab">HTML5 Input类型</a></li>
                        <li role="presentation"><a href="#h20" aria-controls="settings" role="tab" data-toggle="tab">HTML5 表单</a></li>
                        <li role="presentation"><a href="#h21" aria-controls="settings" role="tab" data-toggle="tab">HTML5 语义元素</a></li>
                        <li role="presentation"><a href="#h22" aria-controls="settings" role="tab" data-toggle="tab">HTML5 教学</a></li>
                    </ul>
                    <div class="tab-content study_box">
                        <div role="tabpanel" class="tab-pane active" id="h1">
                            <div>
                                <h3>HTML 教学</h3>
                                <p>超文本标记语言（英语：HyperText Markup Language，简称：HTML）是一种用于创建网页的标准标记语言。</p>
                                <p>您可以使用 HTML 来建立自己的 WEB 站点，HTML 运行在浏览器上，由浏览器来解析。</p>
                                <p>HTML 很容易学习！相信您能很快学会它！</p>
                                <hr>
                                <h4><b>实例-HTML</b></h4>
                                <p><strong>注意：</strong>对于中文网页需要使用 <strong><em>&lt;meta charset="utf-8"&gt;</em></strong>声明编码，否则会出现乱码。</p>
                                <pre class="code" dir="ltr">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;title&gt;Show Me The Code.&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1>我的第一个标题&lt;/h1&gt;
&lt;p>我的第一个段落。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;</pre>
                                <hr>
                                <h4><b>实例解析</b></h4>
                                <ul>
                                    <li><b>&lt;!DOCTYPE html&gt;</b> 声明为 HTML5 文档</li>
                                    <li><b>&lt;html&gt;</b> 元素是 HTML 页面的根元素</li>
                                    <li><b>&lt;head&gt;</b> 元素包含了文档的元（meta）数据</li>
                                    <li><b>&lt;title&gt;</b> 元素描述了文档的标题</li>
                                    <li><b>&lt;body&gt;</b> 元素包含了可见的页面内容</li>
                                    <li><b>&lt;h1&gt;</b> 元素定义一个大标题</li>
                                    <li><b>&lt;p&gt;</b> 元素定义一个段落</li>
                                </ul>
                                <hr>
                                <h4><b>什么是 HTML?</b></h4>
                                <ul>
                                    <li><b>&lt;!DOCTYPE html&gt;</b> 声明为 HTML5 文档</li>
                                    <li><b>&lt;html&gt;</b> 元素是 HTML 页面的根元素</li>
                                    <li><b>&lt;head&gt;</b> 元素包含了文档的元（meta）数据</li>
                                    <li><b>&lt;title&gt;</b> 元素描述了文档的标题</li>
                                    <li><b>&lt;body&gt;</b> 元素包含了可见的页面内容</li>
                                    <li><b>&lt;h1&gt;</b> 元素定义一个大标题</li>
                                    <li><b>&lt;p&gt;</b> 元素定义一个段落</li>
                                </ul>
                                <hr>
                                <h4><b>HTML 标签</b></h4>
                                <p>HTML 标记标签通常被称为 HTML 标签 (HTML tag)。</p>
                                <ul>
                                    <li>HTML 标签是由尖括号包围的关键词，比如 &lt;html&gt;</li>
                                    <li>HTML 标签通常是成对出现的，比如 &lt;b&gt; 和 &lt;/b&gt;</li>
                                    <li>标签对中的第一个标签是<i>开始标签</i>，第二个标签是<i>结束标签</i></li>
                                    <li>开始和结束标签也被称为<i>开放标签</i>和<i>闭合标签</i></li>
                                </ul>
                                <pre class="code" dir="ltr"><h4><span style="color: #e0b244">&lt;标签&gt;</span>内容<span style="color: #e0b244">&lt;/标签&gt;</span></h4></pre>
                                <hr>
                                <h4><b>HTML 元素</b></h4>
                                <p>"HTML 标签" 和 "HTML 元素" 通常都是描述同样的意思.</p>
                                <p>但是严格来讲, 一个 HTML 元素包含了开始标签与结束标签，如下实例:</p>
                                <pre class="code" dir="ltr"><h4><span style="color: #e0b244">&lt;p&gt;</span>这是一个段落。<span style="color: #e0b244">&lt;/p&gt;</span></h4></pre>
                                <hr>
                                <h4><b>HTML 网页结构</b></h4>
                                <div style="width: 800px;background-color:#fb9cff;border: 1px solid black;">&lt;html&gt;
                                    <div style="width: 90%;margin: 10px 4%;border: 1px solid black;">&lt;head&gt;
                                        <p style="width: 90%;margin: 10px 4%;border: 1px solid black;">&lt;title&gt;页面标题&lt;/title&gt;</p>&lt;/head&gt;
                                    </div>
                                    <div style="width: 90%;background-color: white;margin: 10px 4%;border: 1px solid black;">&lt;body&gt;
                                        <p style="width: 90%;margin: 10px 4%;border: 1px solid black;">&lt;h1&gt;这是一个标题。&lt;/h1&gt;</p>
                                        <p style="width: 90%;margin: 10px 4%;border: 1px solid black;">&lt;h1&gt;这是一个段落。&lt;/h1&gt;</p>
                                        <p style="width: 90%;margin: 10px 4%;border: 1px solid black;">&lt;h1&gt;这是另一个段落。&lt;/h1&gt;</p>&lt;/body&gt;
                                    </div>&lt;/html&gt;
                                </div>
                                <p style="width: 800px;margin-top: 10px;padding:10px;border: 1px solid black;">只有 &lt;body&gt; 区域 (白色部分) 才会在浏览器中显示。</p>
                                <hr>
                                <h4><b>HTML 版本</b></h4>
                                <table class="table table-bordered" style="width: 800px;">
                                    <tr class="info">
                                        <th>版本</th>
                                        <th>发布时间</th>
                                    </tr>
                                    <tr>
                                        <td>HTML</td>
                                        <td>1991</td>
                                    </tr>
                                    <tr class="success">
                                        <td>HTML +</td>
                                        <td>1993</td>
                                    </tr>
                                    <tr>
                                        <td>HTML 2.0</td>
                                        <td>1995</td>
                                    </tr>
                                    <tr class="success">
                                        <td>HTML 3.2</td>
                                        <td>1997</td>
                                    </tr>
                                    <tr>
                                        <td>HTML 4.01</td>
                                        <td>1999</td>
                                    </tr>
                                    <tr class="success">
                                        <td>XHTML 1.0</td>
                                        <td>2000</td>
                                    </tr>
                                    <tr>
                                        <td>HTML 5</td>
                                        <td>2012</td>
                                    </tr>
                                    <tr class="success">
                                        <td>XHTML 5</td>
                                        <td>2013</td>
                                    </tr>
                                </table>
                                <hr>
                                <h4><b>&lt;!DOCTYPE&gt; 声明</b></h4>
                                <p>&lt;!DOCTYPE&gt; 声明有助于浏览器中正确显示网页。</p>
                                <p>网络上有很多不同的文件，如果能够正确声明HTML的版本，浏览器就能正确显示网页内容。</p>
                                <p>doctype 声明是不区分大小写的，以下方式均可：</p>
                                <pre class="code" dir="ltr">&lt;!DOCTYPE html&gt;

&lt;!DOCTYPE HTML&gt;

&lt;!doctype html&gt;

&lt;!Doctype Html&gt;</pre>
                                <hr>
                                <h4><b>通用声明</b></h4>
                                <h5><b>HTML 5</b></h5>
                                <pre class="code" dir="ltr">&lt;!DOCTYPE html&gt;</pre>
                                <h5><b>HTML 4.01</b></h5>
                                <pre class="code" dir="ltr">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd"&gt;</pre>
                                <h5><b>XHTML 1.0</b></h5>
                                <pre class="code" dir="ltr">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</pre>
                                <hr>
                                <h4><b>中文编码</b></h4>
                                <p>目前在大部分浏览器中，直接输出中文会出现中文乱码的情况，这时候我们就需要在头部将字符声明为 UTF-8。</p>
                                <pre class="code" dir="ltr">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;页面标题&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;h1&gt;我的第一个标题&lt;/h1&gt;
&lt;p&gt;我的第一个段落。&lt;/p&gt;

&lt;/body&gt;
&lt;/html&gt;</pre>
                                <hr>
                                <h4><b>HTML 文件后缀名</b></h4>
                                <ul>
                                    <li><b>.html</b></li>
                                    <li><b>.htm</b></li>
                                </ul>
                                <p>以上两种后缀名没有区别，都可以使用。</p>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="h2">
                            <div>
                                <h3>HTML 基础</h3>
                                <p>&nbsp;&nbsp;&nbsp;4个实例</p>
                                <hr>
                                <h4><b>HTML 标题</b></h4>
                                <p>HTML 标题（Heading）是通过&lt;h1&gt; - &lt;h6&gt; 标签来定义的.</p>
                                <pre class="code">&lt;h1&gt;这是一个标题&lt;/h1&gt;
&lt;h2&gt;这是一个标题&lt;/h2&gt;
&lt;h3&gt;这是一个标题&lt;/h3&gt;</pre>
                                <hr>
                                <h4><b>HTML 段落</b></h4>
                                <p>HTML 段落是通过标签 &lt;p&gt; 来定义的.</p>
                                <pre class="code">&lt;p&gt;这是一个段落。&lt;/p&gt;
&lt;p&gt;这是另一个段落。&lt;/p&gt;</pre>
                                <hr>
                                <h4><b>HTML 链接</b></h4>
                                <p>HTML 链接是通过标签 &lt;a&gt; 来定义的.</p>
                                <pre class="code">&lt;a href="http://www.runoob.com"&gt;这是一个链接&lt;/a&gt;</pre>
                                <p><b>提示:</b>在 href 属性中指定链接的地址。</p>
                                <p>(您将在本教程稍后的章节中学习更多有关属性的知识).</p>
                                <hr>
                                <h4><b>HTML 图像</b></h4>
                                <p>HTML 图像是通过标签 &lt;img&gt; 来定义的.</p>
                                <pre class="code">&lt;img src="/images/logo.png" width="258" height="39" /&gt;</pre>
                                <p><b>注意:</b>图像的名称和尺寸是以属性的形式提供的。</p>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="h3">
                            <div>
                                <h3>HTML 元素</h3>
                                <p>HTML 文档由 HTML 元素定义。</p>
                                <hr>
                                <h4><b>HTML 元素</b></h4>
                                <table class="table table-bordered" style="width: 800px;">
                                    <tr class="info">
                                        <td>开始标签*</td>
                                        <td>元素内容</td>
                                        <td>结束标签*</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;p&gt;</td>
                                        <td>这是一个段落</td>
                                        <td>&lt;/p&gt;</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;a href="default.htm"&gt;</td>
                                        <td>这是一个链接</td>
                                        <td>&lt;/a&gt;</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;br&gt;</td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                </table>
                                <p>*开始标签常被称为<b>起始标签（opening tag）</b>，结束标签常称为<b>闭合标签（closing tag）</b>。</p>
                                <hr>
                                <h4><b>HTML 元素语法</b></h4>
                                <ul>
                                    <li>HTML 元素以<b>开始标签</b>起始</li>
                                    <li>HTML 元素以<b>结束标签</b>终止</li>
                                    <li><b>元素的内容</b>是开始标签与结束标签之间的内容</li>
                                    <li>某些 HTML 元素具有<b>空内容（empty content）</b></li>
                                    <li>空元素<b>在开始标签中进行关闭</b>（以开始标签的结束而结束）</li>
                                    <li>大多数 HTML 元素可拥有<b>属性</b></li>
                                </ul>
                                <hr>
                                <h4><b>嵌套的 HTML 元素</b></h4>
                                <p>HTML 文档由嵌套的 HTML 元素构成。</p>
                                <h5>HTML 文档解析</h5>
                                <pre class="code">&lt;!DOCTYPE html&gt;
&lt;html&gt;

&lt;body&gt;
&lt;p&gt;这是第一个段落。&lt;/p&gt;
&lt;/body&gt;

&lt;/html&gt;</pre>
                                <h5><b>&lt;p&gt;元素:</b></h5>
                                <pre class="code">&lt;p&gt;这是第一个段落。&lt;/p&gt;</pre>
                                <p>这个 &lt;p&gt; 元素定义了 HTML 文档中的一个段落。</p>
                                <p>这个元素拥有一个开始标签 &lt;p&gt; 以及一个结束标签 &lt;/p&gt;.</p>
                                <p>元素内容是: 这是第一个段落。</p>
                                <h5><b>&lt;body&gt;元素:</b></h5>
                                <pre class="code">&lt;body&gt;
&lt;p&gt;这是第一个段落。&lt;/p&gt;
&lt;/body&gt;</pre>
                                <p>&lt;body&gt; 元素定义了 HTML 文档的主体。</p>
                                <p>这个元素拥有一个开始标签 &lt;body&gt; 以及一个结束标签 &lt;/body&gt;。</p>
                                <p>元素内容是另一个 HTML 元素（p 元素）。</p>
                                <h5><b>&lt;html&gt;元素:</b></h5>
                                <pre class="code">&lt;html&gt;

&lt;body&gt;
&lt;p&gt;这是第一个段落。&lt;/p&gt;
&lt;/body&gt;

&lt;/html&gt;</pre>
                                <p>&lt;html&gt; 元素定义了整个 HTML 文档。</p>
                                <p>这个元素拥有一个开始标签 &lt;html&gt; 以及一个结束标签 &lt;/html&gt;。</p>
                                <p>元素内容是另一个 HTML 元素（body 元素）。</p>
                                <hr>
                                <h4><b>不要忘记结束标签</b></h4>
                                <p>即使您忘记了使用结束标签，大多数浏览器也会正确地显示 HTML：</p>
                                <pre class="code">&lt;p&gt;这是一个段落
&lt;p&gt;这是一个段落</pre>
                                <p>以上实例在浏览器中也能正常显示，因为关闭标签是可选的。</p>
                                <p>但不要依赖这种做法。忘记使用结束标签会产生不可预料的结果或错误。</p>
                                <hr>
                                <h4><b>HTML 空元素</b></h4>
                                <p>没有内容的 HTML 元素被称为空元素。空元素是在开始标签中关闭的。</p>
                                <p>&lt;br&gt; 就是没有关闭标签的空元素（&lt;br&gt; 标签定义换行）。</p>
                                <p>在 XHTML、XML 以及未来版本的 HTML 中，所有元素都必须被关闭。</p>
                                <p>在开始标签中添加斜杠，比如 &lt;br /&gt;，是关闭空元素的正确方法，HTML、XHTML 和 XML 都接受这种方式。</p>
                                <p>即使 &lt;br&gt; 在所有浏览器中都是有效的，但使用 &lt;br /&gt; 其实是更长远的保障。</p>
                                <hr>
                                <h4><b>HTML 提示：使用小写标签</b></h4>
                                <p>HTML 标签对大小写不敏感：&lt;P&gt; 等同于 &lt;p&gt;。许多网站都使用大写的 HTML 标签。</p>
                                <p>本学习交流平台使用的是小写标签，因为万维网联盟（W3C）在 HTML 4 中推荐使用小写，而在未来 (X)HTML 版本中强制使用小写。</p>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="h4">
                            <div>
                                <h3>HTML 属性</h3>
                                <p>属性是 HTML 元素提供的附加信息。</p>
                                <hr>
                                <h4><b>HTML 属性</b></h4>
                                <ul>
                                    <li>HTML 元素可以设置<b>属性</b></li>
                                    <li>属性可以在元素中添加<b>附加信息</b></li>
                                    <li>属性一般描述于<b>开始标签</b></li>
                                    <li>属性总是以名称/值对的形式出现，比如：<b>name="value"</b>。</li>
                                </ul>
                                <hr>
                                <h4><b>属性实例</b></h4>
                                <p>HTML 链接由 &lt;a&gt; 标签定义。链接的地址在 href 属性中指定：</p>
                                <pre class="code">&lt;a href="http://www.w3school.com.cn"&gt;这是一个链接&lt;/a&gt;</pre>
                                <hr>
                                <h4><b>HTML 属性常用引用属性值</b></h4>
                                <p>属性值应该始终被包括在引号内。</p>
                                <p>双引号是最常用的，不过使用单引号也没有问题。</p>
                                <p><b><span class="glyphicon glyphicon-exclamation-sign" style="color: yellow"></span> 提示:</b> 在某些个别的情况下，比如属性值本身就含有双引号，那么您必须使用单引号，例如：name='John "ShotGun" Nelson'</p>
                                <hr>
                                <h4><b>HTML 提示：使用小写属性</b></h4>
                                <p>属性和属性值对大小写不敏感。</p>
                                <p>不过，万维网联盟在其 HTML 4 推荐标准中推荐小写的属性/属性值。</p>
                                <p>而新版本的 (X)HTML 要求使用小写属性。</p>
                                <hr>
                                <h4><b>HTML 属性参考</b></h4>
                                <p>下面列出了适用于大多数 HTML 元素的属性：</p>
                                <table class="table table-bordered" style="width: 800px;">
                                    <tr class="info">
                                        <td>属性</td>
                                        <td>描述</td>
                                    </tr>
                                    <tr>
                                        <td>class</td>
                                        <td>为html元素定义一个或多个类名（classname）(类名从样式文件引入)</td>
                                    </tr>
                                    <tr>
                                        <td>id</td>
                                        <td>定义元素的唯一id</td>
                                    </tr>
                                    <tr>
                                        <td>style</td>
                                        <td>规定元素的行内样式（inline style）</td>
                                    </tr>
                                    <tr>
                                        <td>title</td>
                                        <td>描述了元素的额外信息 (作为工具条使用)</td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="h5">
                            <div>
                                <h3>HTML 标题、段落</h3>
                                <hr>
                                <h4><b>HTML 标题</b></h4>
                                <p>标题（Heading）是通过 &lt;h1&gt; - &lt;h1&gt; 标签进行定义的.</p>
                                <p>&lt;h1&gt; 定义最大的标题。 &lt;h6&gt; 定义最小的标题。</p>
                                <pre class="code">&lt;h1&gt;这是一个标题。&lt;/h1&gt;
&lt;h2&gt;这是一个标题。&lt;/h2&gt;
&lt;h3&gt;这是一个标题。&lt;/h3&gt;</pre>
                                <p><b>注释:</b> 浏览器会自动地在标题的前后添加空行。</p>
                                <hr>
                                <h4><b>标题很重要</b></h4>
                                <p>请确保将 HTML 标题 标签只用于标题。不要仅仅是为了生成<b>粗体</b>或<b>大号</b>的文本而使用标题。</p>
                                <p>搜索引擎使用标题为您的网页的结构和内容编制索引。</p>
                                <p>因为用户可以通过标题来快速浏览您的网页，所以用标题来呈现文档结构是很重要的。</p>
                                <p>应该将 h1 用作主标题（最重要的），其后是 h2（次重要的），再其次是 h3，以此类推。</p>
                                <hr>
                                <h4><b>HTML 水平线</b></h4>
                                <p>&lt;hr&gt; 标签在 HTML 页面中创建水平线。</p>
                                <p>hr 元素可用于分隔内容。</p>
                                <pre class="code">&lt;p&gt;这是一个段落。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这是一个段落。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这是一个段落。&lt;/p&gt;</pre>
                                <hr>
                                <h4><b>HTML 注释</b></h4>
                                <p>可以将注释插入 HTML 代码中，这样可以提高其可读性，使代码更易被人理解。浏览器会忽略注释，也不会显示它们。</p>
                                <p>注释方法:</p>
                                <pre class="code">&lt;!-- 这是一个注释 --&gt;</pre>
                                <p>注释: 开始括号之后（左边的括号）需要紧跟一个叹号，结束括号之前（右边的括号）不需要，合理地使用注释可以对未来的代码编辑工作带来不小帮助。</p>
                                <hr>
                                <h4><b>HTML 提示 - 如何查看源代码</b></h4>
                                <p>你是否看过一些网页然后惊叹它是如何实现的的。</p>
                                <p>如果您想找到其中的奥秘，只需要单击右键，然后选择"查看源文件"（IE）或"查看页面源代码"（Firefox），其他浏览器的做法也是类似的，或者使用 <kbd>F12</kbd> 。这么做会打开一个包含页面 HTML 代码的窗口。</p>
                                <hr>
                                <h4><b>HTML 段落</b></h4>
                                <p>HTML 可以将文档分割为若干段落。</p>
                                <p>段落是通过 &lt;p&gt; 标签定义的。</p>
                                <pre class="code">&lt;p&gt;这是一个段落 &lt;/p&gt;
&lt;p&gt;这是另一个段落&lt;/p&gt;</pre>
                                <p><b>注意：</b>浏览器会自动地在段落的前后添加空行。（&lt;/p&gt; 是块级元素）</p>
                                <hr>
                                <h4><b>HTML 拆行</b></h4>
                                <p>如果您希望在不产生一个新段落的情况下进行换行（新行），请使用 &lt;br /&gt; 标签：</p>
                                <pre class="code">&lt;p&gt;这个&lt;br&gt;段落&lt;br&gt;演示了分行的效果&lt;/p&gt;</pre>
                                <p>&lt;br /&gt; 元素是一个空的 HTML 元素。由于关闭标签没有任何意义，因此它没有结束标签。</p>
                                <hr>
                                <h4><b>HTML 输出-使用提醒</b></h4>
                                <p>我们无法确定 HTML 被显示的确切效果。屏幕的大小，以及对窗口的调整都可能导致不同的结果。</p>
                                <p>对于 HTML，您无法通过在 HTML 代码中添加额外的空格或换行来改变输出的效果。</p>
                                <p>当显示页面时，浏览器会移除源代码中多余的空格和空行。所有连续的空格或空行都会被算作一个空格。需要注意的是，HTML 代码中的所有连续的空行（换行）也被显示为一个空格。</p>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="h6">
                            <div>
                                <h3>HTML 链接</h3>
                                <p>HTML 使用超级链接与网络上的另一个文档相连。几乎可以在所有的网页中找到链接。点击链接可以从一张页面跳转到另一张页面。</p>
                                <hr>
                                <h4><b>HTML 超链接（链接）</b></h4>
                                <p>HTML使用标签 &lt;a&gt;来设置超文本链接。</p>
                                <p>超链接可以是一个字，一个词，或者一组词，也可以是一幅图像，您可以点击这些内容来跳转到新的文档或者当前文档中的某个部分。</p>
                                <p>当您把鼠标指针移动到网页中的某个链接上时，箭头会变为一只小手。</p>
                                <p>在标签 &lt;a&gt; 中使用了href属性来描述链接的地址。</p>
                                <p>默认情况下，链接将以以下形式出现在浏览器中：</p>
                                <ul>
                                    <li>一个未访问过的链接显示为蓝色字体并带有下划线。</li>
                                    <li>访问过的链接显示为紫色并带有下划线。</li>
                                    <li>点击链接时，链接显示为红色并带有下划线。</li>
                                </ul>
                                <p><i>注意：如果为这些超链接设置了 CSS 样式，展示样式会根据 CSS 的设定而显示。</i></p>
                                <hr>
                                <h4><b>HTML 链接语法</b></h4>
                                <p>链接的 HTML 代码很简单。它类似这样：</p>
                                <pre class="code">&lt;a href="url"&gt;链接文本&lt;/a&gt;</pre>
                                <p>href 属性描述了链接的目标。</p>
                                <h5>实例</h5>
                                <pre class="code">&lt;a href="http://www.w3school.com.cn/"&gt;访问w3school&lt;/a&gt;</pre>
                                <p>上面这行代码显示为：<a href="http://www.w3school.com.cn/" style="text-decoration: underline;">访问w3school</a></p>
                                <p><b>提示: </b>"链接文本" 不必一定是文本。<b>图片</b>或其他<b> HTML 元素</b>都可以成为链接。</p>
                                <hr>
                                <h4><b>HTML 链接 - target 属性</b></h4>
                                <p>使用 target 属性，你可以定义被链接的文档在何处显示。</p>
                                <p>下面的这行会在新窗口打开文档：</p>
                                <pre class="code">&lt;a href="http://www.w3school.com.cn/" target="_blank"&gt;访问w3school&lt;/a&gt;</pre>
                                <hr>
                                <h4><b>HTML 链接 - id 属性</b></h4>
                                <p>id属性可用于创建在一个HTML文档书签标记。</p>
                                <p><b>提示:</b> 书签是不以任何特殊的方式显示，在HTML文档中是不显示的，所以对于读者来说是隐藏的。</p>
                                <h5>实例</h5>
                                <p>在HTML文档中插入ID:</p>
                                <pre class="code">&lt;a id="tips"&gt;有用的提示部分&lt;/a&gt;</pre>
                                <p>在HTML文档中创建一个链接到"有用的提示部分(id="tips"）"：</p>
                                <pre class="code">&lt;a href="#tips"&gt;访问有用的提示部分&lt;/a&gt;</pre>
                                <p>或者，从另一个页面创建一个链接到"有用的提示部分(id="tips"）"：</p>
                                <pre class="code">&lt;a href="http://www.***.com/***.html#tips"&gt;访问有用的提示部分&lt;/a&gt;</pre>
                                <hr>
                                <h4><b>基本的注意事项 - 有用的提示</b></h4>
                                <p><b>注释：</b>请始终将正斜杠添加到子文件夹。假如这样书写链接：href="http://www.runoob.com/html"，就会向服务器产生两次 HTTP 请求。</p>
                                <p>这是因为服务器会添加正斜杠到这个地址，然后创建一个新的请求，就像这样：</p>
                                <p>href="http://www.runoob.com/html/"。</p>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="h7">
                            <div>
                                <h3>HTML <b>&lt;head&gt;</b></h3>
                                <hr>
                                <h4><b>HTML &lt;head&gt; 元素</b></h4>
                                <p>&lt;head&gt; 元素包含了所有的头部标签元素。在 &lt;head&gt;元素中你可以插入脚本（scripts）, 样式文件（CSS），及各种meta信息。</p>
                                <p>可以添加在头部区域的元素标签为: &lt;title&gt;, &lt;style&gt;, &lt;meta&gt;, &lt;link&gt;, &lt;script&gt;, &lt;noscript&gt;, and &lt;base&gt;.</p>
                                <hr>
                                <h4><b>HTML &lt;title&gt; 元素</b></h4>
                                <p>&lt;title&gt; 标签定义了不同文档的标题。</p>
                                <p>&lt;title&gt; 在 HTML/XHTML 文档中是必须的。</p>
                                <p>&lt;title&lt; 元素:</p>
                                <ul>
                                    <li>定义了浏览器工具栏的标题</li>
                                    <li>当网页添加到收藏夹时，显示在收藏夹中的标题</li>
                                    <li>显示在搜索引擎结果页面的标题</li>
                                </ul>
                                <p>一个简单的 HTML 文档:</p>
                                <pre class="code">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;title&gt;文档标题&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
文档内容......
&lt;/body&gt;

&lt;/html&gt;</pre>
                                <hr>
                                <h4><b>HTML &lt;base&gt; 元素</b></h4>
                                <p>&lt;base&gt; 标签描述了基本的链接地址/链接目标，该标签作为HTML文档中所有的链接标签的默认链接:</p>
                                <pre class="code">&lt;head&gt;
&lt;base href="http://www.super.com/images/" target="_blank"&gt;
&lt;/head&gt;</pre>
                                <hr>
                                <h4><b>HTML &lt;link&gt; 元素</b></h4>
                                <p>&lt;link&gt; 标签定义了文档与外部资源之间的关系。</p>
                                <p>&lt;link&gt; 标签通常用于链接到样式表:</p>
                                <pre class="code">&lt;head&gt;
&lt;link rel="stylesheet" type="text/css" href="mystyle.css"&gt;
&lt;/head&gt;</pre>
                                <hr>
                                <h4><b>HTML &lt;style&gt; 元素</b></h4>
                                <p>&lt;t=style&gt; 标签定义了HTML文档的样式文件引用地址。</p>
                                <p>在&lt;style&gt; 元素中你也可以直接添加样式来渲染 HTML 文档:</p>
                                <pre class="code">&lt;head&gt;
&lt;style type="text/css"&gt;
body {background-color:yellow}
p {color:blue}
&lt;/style&gt;
&lt;head&gt;</pre>
                                <hr>
                                <h4><b>HTML &lt;meta&gt; 元素</b></h4>
                                <p>meta标签描述了一些基本的元数据。</p>
                                <p>&lt;meta&gt; 标签提供了元数据.元数据也不显示在页面上，但会被浏览器解析。</p>
                                <p>META 元素通常用于指定网页的描述，关键词，文件的最后修改时间，作者，和其他元数据。</p>
                                <p>元数据可以使用于浏览器（如何显示内容或重新加载页面），搜索引擎（关键词），或其他Web服务。</p>
                                <p>&lt;meta&gt; 一般放置于 &lt;head&gt; 区域</p></p>
                                <h5><b>&lt;meta&gt; 标签-实例</b></h5>
                                <p>为搜索引擎定义关键词:</p>
                                <pre class="code">&lt;meta name="keywords" content="HTML, CSS, XML, XHTML, JavaScript"&gt;</pre>
                                <p>为网页定义描述内容:</p>
                                <pre class="code">&lt;meta name="description" content="免费 Web & 编程 教程"&gt;</pre>
                                <p>定义网页作者:</p>
                                <pre class="code">&lt;meta name="author" content="Runoob"&gt;</pre>
                                <p>每30秒中刷新当前页面:</p>
                                <pre class="code">&lt;meta http-equiv="refresh" content="30"&gt;</pre>
                                <hr>
                                <h4><b>HTML &lt;script&gt; 元素</b></h4>
                                <p>&lt;script&gt;标签用于加载脚本文件，如： JavaScript。</p>
                                <p>&lt;script&gt;元素在以下章节会详细描述。</p>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="h8">
                            <div>
                                <h3>HTML 样式 CSS</h3>
                                <p>CSS (Cascading Style Sheets) 用于渲染HTML元素标签的样式.</p>
                                <hr>
                                <h4><b>如何使用CSS</b></h4>
                                <p>CSS 是在 HTML 4 开始使用的,是为了更好的渲染HTML元素而引入的.</p>
                                <p>CSS 可以通过以下方式添加到HTML中:</p>
                                <ul>
                                    <li>内联样式- 在HTML元素中使用"style" 属性</li>
                                    <li>内部样式表 -在HTML文档头部 &lt;head&gt; 区域使用&lt;style&gt; 元素 来包含CSS</li>
                                    <li>外部引用 - 使用外部 CSS 文件</li>
                                </ul>
                                <p>最好的方式是通过外部引用CSS文件.</p>
                                <p>在本站的HTML教程中使用了内联CSS样式来介绍实例，这是为了简化的例子,方便查看</p>
                                <hr>
                                <h4><b>内联样式</b></h4>
                                <p>当特殊的样式需要应用到个别元素时，就可以使用内联样式。 使用内联样式的方法是在相关的标签中使用样式属性。样式属性可以包含任何 CSS 属性。以下实例显示出如何改变段落的颜色和左外边距。</p>
                                <pre class="code">&lt;p style="color:blue;margin-left:20px;"&gt;This is a paragraph.&lt;/p&gt;</pre>
                                <hr>
                                <h4><b>HTML样式实例 - 背景颜色</b></h4>
                                <p>背景色属性（background-color）定义一个元素的背景颜色：</p>
                                <pre class="code">&lt;body style="background-color:yellow;"&gt;
&lt;h2 style="background-color:red;"&gt;这是一个标题&lt;/h2&gt;
&lt;p style="background-color:green;"&gt;这是一个段落。&lt;/p&lt;
&lt;/body&gt;</pre>
                                <p>早期背景色属性（background-color）是使用 bgcolor 属性定义。</p>
                                <hr>
                                <h4><b>HTML 样式实例 - 字体, 字体颜色 ，字体大小</b></h4>
                                <p>我们可以使用font-family（字体），color（颜色），和font-size（字体大小）属性来定义字体的样式:</p>
                                <pre class="code">&lt;h1 style="font-family:verdana;"&gt;一个标题&lt;/h1&lt;
&lt;p style="font-family:arial;color:red;font-size:20px;"&gt;一个段落。&lt;/p&lt;</pre>
                                <p>现在通常使用font-family（字体），color（颜色），和font-size（字体大小）属性来定义文本样式，而不是使用&lt;font&gt;标签。</p>
                                <hr>
                                <h4><b>HTML 样式实例 - 文本对齐方式</b></h4>
                                <p>使用 text-align（文字对齐）属性指定文本的水平与垂直对齐方式：</p>
                                <pre class="code">&lt;h1 style="text-align:center;"&gt;居中对齐的标题&lt;/h1&gt;
&lt;p&gt;这是一个段落。&lt;/p&gt;</pre>
                                <p>文本对齐属性 text-align取代了旧标签 &lt;center&gt;。</p>
                                <hr>
                                <h4><b>内部样式表</b></h4>
                                <p>当单个文件需要特别样式时，就可以使用内部样式表。你可以在&lt;head&gt; 部分通过 &lt;style&gt;标签定义内部样式表:</p>
                                <pre class="code">&lt;head&gt;
&lt;style type="text/css"&gt;
body {background-color:yellow;}
p {color:blue;}
&lt;/style&gt;
&lt;/head&gt;</pre>
                                <p>文本对齐属性 text-align取代了旧标签 &lt;center&gt;。</p>
                                <hr>
                                <h4><b>外部样式表</b></h4>
                                <p>当样式需要被应用到很多页面的时候，外部样式表将是理想的选择。使用外部样式表，你就可以通过更改一个文件来改变整个站点的外观。</p>
                                <pre class="code">&lt;head&gt;
&lt;link rel="stylesheet" type="text/css" href="mystyle.css"&gt;
&lt;/head&gt;</pre>
                                <p>文本对齐属性 text-align取代了旧标签 &lt;center&gt;。</p>
                                <hr>
                                <h4><b>已弃用的标签和属性</b></h4>
                                <p>在HTML 4, 原来支持定义HTML元素样式的标签和属性已被弃用。这些标签将不支持新版本的HTML标签。</p>
                                <p>不建议使用的标签有: &lt;font&gt;, &lt;center&gt;, &lt;strike&gt;</p>
                                <p>不建议使用的属性: color 和 bgcolor.</p>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="h9">
                            <div>
                                <h3>HTML 图像</h3>
                                <hr>
                                <p>实例 - Bootstrap</p>
                                <img src="images/Bootstrap.jpg" alt="">
                                <hr>
                                <h4><b>HTML 图像- 图像标签（ &lt;img&gt;）和源属性（Src）</b></h4>
                                <p>在 HTML 中，图像由 &lt;img&gt; 标签定义。</p>
                                <p>&lt;img&gt; 是空标签，意思是说，它只包含属性，并且没有闭合标签。</p>
                                <p>要在页面上显示图像，你需要使用源属性（src）。src 指 "source"。源属性的值是图像的 URL 地址。</p>
                                <p><b>定义图像的语法是：</b></p>
                                <pre class="code">&lt;img src="url" alt="some_text"&gt;</pre>
                                <p>浏览器将图像显示在文档中图像标签出现的地方。如果你将图像标签置于两个段落之间，那么浏览器会首先显示第一个段落，然后显示图片，最后显示第二段。</p>
                                <hr>
                                <h4><b>HTML 图像- Alt属性</b></h4>
                                <p>alt 属性用来为图像定义一串预备的可替换的文本。</p>
                                <p>替换文本属性的值是用户定义的。</p>
                                <pre class="code">&lt;img src="logo.gif" alt="Big Logo"&gt;</pre>
                                <p>在浏览器无法载入图像时，替换文本属性告诉读者她们失去的信息。此时，浏览器将显示这个替代性的文本而不是图像。为页面上的图像都加上替换文本属性是个好习惯，这样有助于更好的显示信息，并且对于那些使用纯文本浏览器的人来说是非常有用的。</p>
                                <hr>
                                <h4><b>HTML 图像- 设置图像的高度与宽度</b></h4>
                                <p>height（高度） 与 width（宽度）属性用于设置图像的高度与宽度。</p>
                                <p>属性值默认单位为像素:</p>
                                <pre class="code">&lt;img src="pulpit.jpg" alt="Pulpit rock" width="304" height="228"&gt;</pre>
                                <p><b>提示:</b> 指定图像的高度和宽度的一个很好的习惯。如果图像指定了高度宽度，页面加载时就会保留指定的尺寸。如果没有指定图片的大小，加载页面时有可能会破坏HTML页面的整体布局。</p>
                                <hr>
                                <h4><b>基本的注意事项 - 有用的提示：</b></h4>
                                <p><b>注意:</b> 假如某个 HTML 文件包含十个图像，那么为了正确显示这个页面，需要加载 11 个文件。加载图片是需要时间的，所以我们的建议是：慎用图片。</p>
                                <p><b>注意:</b> 加载页面时，要注意插入页面图像的路径，如果不能正确设置图像的位置，浏览器无法加载图片，图像标签就会显示一个破碎的图片。</p>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="h10">
                            <div>
                                <h3>HTML 表格</h3>
                                <hr>
                                <h4>HTML 表格实例</h4>
                                <table class="table table-bordered" style="width: 800px;">
                                    <tr>
                                        <th>Frist Name</th>
                                        <th>Last Name</th>
                                        <th>Age</th>
                                    </tr>
                                    <tr>
                                        <td>Jill</td>
                                        <td>Smith</td>
                                        <td>50</td>
                                    </tr>
                                    <tr>
                                        <td>Eve</td>
                                        <td>Jackson</td>
                                        <td>36</td>
                                    </tr>
                                    <tr>
                                        <td>John</td>
                                        <td>Doe</td>
                                        <td>40</td>
                                    </tr>
                                    <tr>
                                        <td>Adam</td>
                                        <td>Johnson</td>
                                        <td>28</td>
                                    </tr>
                                </table>
                                <h4><b>HTML 表格</b></h4>
                                <p>表格由 &lt;table&gt; 标签来定义。每个表格均有若干行（由 &lt;tr&gt; 标签定义），每行被分割为若干单元格（由 &lt;td&gt; 标签定义）。</p>
                                <p>字母 td 指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。</p>
                                <pre class="code">&lt;table border="1"&gt;
    &lt;tr&gt;
        &lt;td&gt;row 1, cell 1&lt;/td&gt;
        &lt;td&gt;row 1, cell 2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;row 2, cell 1&lt;/td&gt;
        &lt;td&gt;row 2, cell 2&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;</pre>
                                <p>在浏览器中如下显示：</p>
                                <table border="1" style="border-collapse: separate;border-spacing: 1px;">
                                    <tr>
                                        <td>row 1, cell 1</td>
                                        <td>row 1, cell 2</td>
                                    </tr>
                                    <tr>
                                        <td>row 2, cell 1</td>
                                        <td>row 2, cell 2</td>
                                    </tr>
                                </table>
                                <hr>
                                <h4><b>HTML 表格和边框属性</b></h4>
                                <p>如果不定义边框属性，表格将不显示边框。有时这很有用，但是大多数时候，我们希望显示边框。</p>
                                <p>使用边框属性来显示一个带有边框的表格：</p>
                                <pre class="code">&lt;table border="1"&gt;
    &lt;tr&gt;
        &lt;td&gt;row 1, cell 1&lt;/td&gt;
        &lt;td&gt;row 1, cell 2&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;</pre>
                                <hr>
                                <h4><b>HTML 表格表头</b></h4>
                                <p>表格的表头使用 &lt;th&gt; 标签进行定义。</p>
                                <p>大多数浏览器会把表头显示为粗体居中的文本：</p>
                                <pre class="code">&lt;table border="1"&gt;
    &lt;tr&gt;
        &lt;th&gt;Header 1&lt;/th&gt;
        &lt;th&gt;Header 2&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;row 1, cell 1&lt;/td&gt;
        &lt;td&gt;row 1, cell 2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;row 2, cell 1&lt;/td&gt;
        &lt;td&gt;row 2, cell 2&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;</pre>
                                <p>在浏览器中如下显示：</p>
                                <table border="1" style="border-collapse: separate;border-spacing: 1px;">
                                    <tr>
                                        <th style="text-align: center">Header 1</th>
                                        <th style="text-align: center">Header 2</th>
                                    </tr>
                                    <tr>
                                        <td>row 1, cell 1</td>
                                        <td>row 1, cell 2</td>
                                    </tr>
                                    <tr>
                                        <td>row 2, cell 1</td>
                                        <td>row 2, cell 2</td>
                                    </tr>
                                </table>
                                <hr>
                                <h4><b>HTML 表格标签</b></h4>
                                <table class="table table-bordered" style="width: 800px;">
                                    <tr class="info">
                                        <th>标签</th>
                                        <th>描述</th>
                                    </tr>
                                    <tr>
                                        <td>&lt;table&gt;</td>
                                        <td>定义表格</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;th&gt;</td>
                                        <td>定义表格的表头</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;tr&gt;</td>
                                        <td>定义表格的行</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;td&gt;</td>
                                        <td>定义表格单元</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;caption&gt;</td>
                                        <td>定义表格标题</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;colgroup&gt;</td>
                                        <td>定义表格列的组</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;col&gt;</td>
                                        <td>定义用于表格列的属性</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;thead&gt;</td>
                                        <td>定义表格的页眉</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;tbody&gt;</td>
                                        <td>定义表格的主体</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;tfoot&gt;</td>
                                        <td>定义表格的页脚</td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="h11">
                            <div>
                            <h3>HTML 列表</h3>
                            <hr>
                            <p>HTML 支持有序、无序和定义列表:</p>
                            <div class="code" style="width: 400px;height: 150px">
                                <div style="float: left;">
                                    <h4><b>有序列表</b></h4>
                                    <ol>
                                        <li>第一个列表项</li>
                                        <li>第二个列表项</li>
                                        <li>第三个列表项</li>
                                    </ol>
                                </div>
                                <div style="float: right;">
                                    <h4><b>无序列表</b></h4>
                                    <ul>
                                        <li>列表项</li>
                                        <li>列表项</li>
                                        <li>列表项</li>
                                    </ul>
                                </div>
                            </div>
                            <hr>
                            <h4><b>HTML 无序列表</b></h4>
                            <p>无序列表是一个项目的列表，此列项目使用粗体圆点（典型的小黑圆圈）进行标记。</p>
                            <p>无序列表使用 &lt;ul&gt; 标签</p>
                            <pre class="code">&lt;ul&gt;
    &lt;li&gt;Coffee&lt;/li&gt;
    &lt;li&gt;Milk&lt;/li&gt;
&lt;/ul&gt;</pre>
                            <p>浏览器如下显示：</p>
                            <ul>
                                <li>Coffee</li>
                                <li>Milk</li>
                            </ul>
                            <hr>
                            <h4><b>HTML 有序列表</b></h4>
                            <p>同样，有序列表也是一列项目，列表项目使用数字进行标记。 有序列表始于 &lt;ol&gt; 标签。每个列表项始于 &lt;li&gt; 标签。</p>
                            <p>列表项项使用数字来标记。</p>
                            <pre class="code">&lt;ol&gt;
    &lt;li&gt;Coffee&lt;/li&gt;
    &lt;li&gt;Milk&lt;/li&gt;
&lt;/ol&gt;</pre>
                            <p>浏览器如下显示：</p>
                            <ol>
                                <li>Coffee</li>
                                <li>Milk</li>
                            </ol>
                            <hr>
                            <h4><b>HTML 自定义列表</b></h4>
                            <p>自定义列表不仅仅是一列项目，而是项目及其注释的组合。</p>
                            <p>自定义列表以 &lt;dl&gt; 标签开始。每个自定义列表项以 &lt;dt&gt; 开始。每个自定义列表项的定义以 &lt;dd&lt; 开始。</p>
                            <pre class="code">&lt;dl&gt;
&lt;dt&gt;Coffee&lt;/dt&gt;
&lt;dd&gt;- black hot drink&lt;/dd&gt;
&lt;dt&gt;Milk&lt;/dt&gt;
&lt;dd&gt;- white cold drink&lt;/dd&gt;
&lt;/dl&gt;</pre>
                            <p>浏览器如下显示：</p>
                            <dl>
                                <dt>Coffee</dt>
                                <dd>- black hot drink</dd>
                                <dt>Milk</dt>
                                <dd>- white cold drink</dd>
                            </dl>
                        </div>

                        </div>
                        <div role="tabpanel" class="tab-pane" id="h12">
                            <div>
                                <h3>HTML 区块 &lt;div&gt; 和 &lt;span&gt;</h3>
                                <hr>
                                <p>HTML 可以通过 &lt;div&gt; 和 &lt;span&gt;将元素组合起来。</p>
                                <hr>
                                <h4><b>HTML 区块元素</b></h4>
                                <p>大多数 HTML 元素被定义为<b>块级元素</b>或<b>内联元素</b>。</p>
                                <p>块级元素在浏览器显示时，通常会以新行来开始（和结束）。</p>
                                <p>实例: &lt;h1&gt;, &lt;p&gt;, &lt;ul&gt;, &lt;table&gt;</p>
                                <hr>
                                <h4><b>HTML 内联元素</b></h4>
                                <p>内联元素在显示时通常不会以新行开始。</p>
                                <p>实例: &lt;b&gt;, &lt;td&gt;, &lt;a&gt;, &lt;img&gt;</p>
                                <hr>
                                <h4><b>HTML &lt;div&gt; 元素</b></h4>
                                <p>HTML &lt;div&gt; 元素是块级元素(block-level)，它可用于组合其他 HTML 元素的容器。</p>
                                <p>&lt;div&gt; 元素没有特定的含义。除此之外，由于它属于块级元素，浏览器会在其前后显示折行。</p>
                                <p>如果与 CSS 一同使用，&lt;div&gt; 元素可用于对大的内容块设置样式属性。
                                </p>
                                <p>&lt;div&gt; 元素的另一个常见的用途是文档布局。它取代了使用表格定义布局的老式方法。使用 &lt;table&gt; 元素进行文档布局不是表格的正确用法。&lt;table&gt; 元素的作用是显示表格化的数据。</p>
                                <hr>
                                <h4><b>HTML &lt;span&gt; 元素</b></h4>
                                <p>HTML &lt;span&gt; 元素是内联元素(inline)，可用作文本的容器</p>
                                <p>&lt;span&gt; 元素也没有特定的含义。</p>
                                <p>当与 CSS 一同使用时，&lt;span&gt; 元素可用于为部分文本设置样式属性。</p>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="h13">
                            <div>
                                <h3>HTML 表单</h3>
                                <hr>
                                <p>HTML 表单用于搜集不同类型的用户输入。</p>
                                <hr>
                                <h4><b>HTML 表单</b></h4>
                                <p>表单是一个包含表单元素的区域。</p>
                                <p>表单元素是允许用户在表单中输入内容,比如：文本域(textarea)、下拉列表、单选框(radio-buttons)、复选框(checkboxes)等等。</p>
                                <p>表单使用表单标签 &lt;form&gt; 来设置:</p>
                                <pre class="code">&lt;form&gt;
.
input 元素
.
&lt;/form&gt;</pre>
                                <hr>
                                <h4><b>HTML 表单 - 输入元素</b></h4>
                                <p>多数情况下被用到的表单标签是输入标签（&lt;input&gt;）。</p>
                                <p>输入类型是由类型属性（type）定义的。大多数经常被用到的输入类型如下：</p>
                                <hr>
                                <h4><b>文本域（Text Fields）</b></h4>
                                <p>文本域通过&lt;input type="text"&gt; 标签来设定，当用户要在表单中键入字母、数字等内容时，就会用到文本域。</p>
                                <pre class="code">&lt;form&gt;
First name: &lt;input type="text" name="firstname"&gt;&lt;br&gt;
Last name: &lt;input type="text" name="lastname"&gt;
&lt;/form&gt;</pre>
                                <p>浏览器显示如下：</p>
                                <form>
                                    First name: <input type="text" name="firstname"><br>
                                    Last name: <input type="text" name="lastname">
                                </form>
                                <p><b>注意:</b>表单本身并不可见。同时，在大多数浏览器中，文本域的缺省宽度是20个字符。</p>
                                <hr>
                                <h4><b>密码字段</b></h4>
                                <p>密码字段通过标签&lt;input type="password"&gt; 来定义:</p>
                                <pre class="code">&lt;form&gt;
Password: &lt;input type="password" name="pwd"&gt;
&lt;/form&gt;</pre>
                                <p>浏览器显示如下：</p>
                                <form>
                                    Password: <input type="password" name="pwd">
                                </form>
                                <p><b>注意:</b>密码字段字符不会明文显示，而是以星号或圆点替代。</p>
                                <hr>
                                <h4><b>单选按钮（Radio Buttons）</b></h4>
                                <p>&lt;input type="radio"&gt; 标签定义了表单单选框选项</p>
                                <pre class="code">&lt;form&gt;
&lt;input type="radio" name="sex" value="male"&gt;Male&lt;br&gt;
&lt;input type="radio" name="sex" value="female"&gt;Female
&lt;/form&gt;</pre>
                                <p>浏览器显示如下：</p>
                                <form>
                                    <input type="radio" name="sex" value="male">Male<br>
                                    <input type="radio" name="sex" value="female">Female
                                </form>
                                <hr>
                                <h4><b>复选框（Checkboxes）</b></h4>
                                <p>&lt;input type="checkbox"&gt; 定义了复选框. 用户需要从若干给定的选择中选取一个或若干选项。</p>
                                <pre class="code">&lt;form&gt;
&lt;input type="checkbox" name="vehicle" value="Bike"&gt;I have a bike&lt;br&gt;
&lt;input type="checkbox" name="vehicle" value="Car"&gt;I have a car
&lt;/form&gt;</pre>
                                <p>浏览器显示如下：</p>
                                <form>
                                    <input type="checkbox" name="vehicle" value="Bike">I have a bike<br>
                                    <input type="checkbox" name="vehicle" value="Car">I have a car
                                </form>
                                <hr>
                                <h4><b>提交按钮(Submit Button)</b></h4>
                                <p>&lt;input type="submit"&gt; 定义了提交按钮.</p>
                                <p>当用户单击确认按钮时，表单的内容会被传送到另一个文件。表单的动作属性定义了目的文件的文件名。由动作属性定义的这个文件通常会对接收到的输入数据进行相关的处理。</p>
                                <pre class="code">&lt;form name="input" action="html_form_action.php" method="get"&gt;
Username: &lt;input type="text" name="user"&gt;
&lt;input type="submit" value="Submit"&gt;
&lt;/form&gt;</pre>
                                <p>浏览器显示如下：</p>
                                <form name="input" action="html_form_action.html" method="get">
                                    Username: <input type="text" name="user">
                                    <input type="submit" class="btn btn-success" value="Submit">
                                </form>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="h14">
                            <div>
                                <h3>HTML 脚本</h3>
                                <hr>
                                <p>JavaScript 使 HTML 页面具有更强的动态和交互性。</p>
                                <hr>
                                <h4><b>HTML &lt;script&gt; 标签</b></h4>
                                <p>&lt;script&gt; 标签用于定义客户端脚本，比如 JavaScript。</p>
                                <p>&lt;script&gt; 元素既可包含脚本语句，也可通过 src 属性指向外部脚本文件。</p>
                                <p>JavaScript 最常用于图片操作、表单验证以及内容动态更新。</p>
                                <p>下面的脚本会向浏览器输出"Hello World!"：</p>
                                <pre class="code">&lt;script&gt;
    document.write("Hello World!");
&lt;/script&gt;</pre>
                                <hr>
                                <h4><b>HTML &lt;noscript&gt; 标签</b></h4>
                                <p>&lt;noscript&gt; 标签提供无法使用脚本时的替代内容，比方在浏览器禁用脚本时，或浏览器不支持客户端脚本时。</p>
                                <p>&lt;noscript&gt;元素可包含普通 HTML 页面的 body 元素中能够找到的所有元素。</p>
                                <p>只有在浏览器不支持脚本或者禁用脚本时，才会显示 &lt;noscript&gt; 元素中的内容：</p>
                                <pre class="code">&lt;script&gt;
    document.write("Hello World!")
&lt;/script&gt;
&lt;noscript&gt;抱歉，你的浏览器不支持 JavaScript!&lt;/noscript&gt;</pre>
                                <hr>
                                <p><b>提示：</b>更多JavaScript教程会在后面介绍。</p>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="h15">
                            <div>
                                <h3><b>HTML 总结</b></h3>
                                <hr>
                                <p>本教程已教你如何使用 HTML 创建站点。</p>
                                <p>HTML 是一种在 Web 上使用的通用标记语言。HTML 允许你格式化文本，添加图片，创建链接、输入表单、框架和表格等等，并可将之存为文本文件，浏览器即可读取和显示。</p>
                                <p>HTML 的关键是标签，其作用是指示将出现的内容。</p>
                                <hr>
                                <h3><b>现在，你已学完HTML，接下来该学习什么呢？</b></h3>
                                <hr>
                                <h3><b>学习 CSS</b></h3>
                                <p>CSS被用来同时控制多重网页的样式和布局。</p>
                                <p>通过使用 CSS，所有的格式化均可从 HTML 中剥离出来，并存储于一个独立的文件中。</p>
                                <hr>
                                <h3><b>学习 JavaScript</b></h3>
                                <p>JavaScript 可以让你的网页更加生动。</p>
                                <p>如果你只想展示内容，静态网站是很好的展示形象，如果你想与用户进行交换或者让网页更加生动那就需要使用到Javascript。</p>
                                <p>JavaScript是互联网上最流行的脚本语言，目前所有主流浏览器都支持Javascript。</p>
                                <hr>
                                <h3><b>站点服务器</b></h3>
                                <p>在自己的服务器上托管网站始终是一个选项。有几点需要考虑：</p>
                                <h4><b>硬件支出</b></h4>
                                <p>如果要运行"真正"的网站，您不得不购买强大的服务器硬件。不要指望低价的 PC 能够应付这些工作。您还需要稳定的（一天 24 小时）高速连接。</p>
                                <h4><b>软件支出</b></h4>
                                <p>请记住，服务器授权通常比客户端授权更昂贵。同时请注意，服务器授权也许有用户数量限制。</p>
                                <h4><b>人工费</b></h4>
                                <p>不要指望低廉的人工费用。您必须安装自己的硬件和软件。您同时要处理漏洞和病毒，以确保您的服务器时刻正常地运行于一个"任何事都可能发生"的环境中。</p>
                                <hr>
                                <h3><b>使用因特网服务提供商（ISP）</b></h3>
                                <p>从 ISP 租用服务器也很常见。</p>
                                <p>大多数小公司会把网站存放到由 ISP 提供的服务器上。其优势有以下几点：</p>
                                <h4><b>连接速度</b></h4>
                                <p>大多数 ISP 都拥有连接因特网的高速连接。</p>
                                <h4><b>强大的硬件</b></h4>
                                <p>ISP 的 web 服务器通常强大到能够由若干网站分享资源。您还要看一下 ISP 是否提供高效的负载平衡，以及必要的备份服务器。</p>
                                <h4><b>安全性和可靠性</b></h4>
                                <p>ISP 是网站托管方面的专家。他们应该提供 99% 以上的在线时间，最新的软件补丁，以及最好的病毒防护。</p>
                                <hr>
                                <h3><b>选择 ISP 时的注意事项</b></h3>
                                <h4><b>24 小时支持</b></h4>
                                <p>确保 ISP 提供 24 小时支持。不要使自己置于无法解决严重问题的尴尬境地，同时还必须等待第二个工作日。如果您不希望支付长途电话费，那么免费电话服务也是必要的。</p>
                                <h4><b>每日备份</b></h4>
                                <p>确保 ISP 会执行每日备份的例行工作，否则您有可能损失有价值的数据。</p>
                                <h4><b>流量</b></h4>
                                <p>研究一下 ISP 的流量限制。如果出现由于网站受欢迎而激增的不可预期的访问量，那么您要确保不会因此支付额外费用。</p>
                                <h4><b>带宽或内容限制</b></h4>
                                <p>研究一下 ISP 的带宽和内容限制。如果您计划发布图片或播出视频或音频，请确保您有此权限。</p>
                                <h4><b>E-mail 功能</b></h4>
                                <p>请确保 ISP 支持您需要的 e-mail 功能。</p>
                                <h4><b>数据库访问</b></h4>
                                <p>如果您计划使用网站数据库中的数据，那么请确保您的 ISP 支持您需要的数据库访问。</p>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="h16">
                            <div>
                                <h3>HTML5 介绍</h3>
                                <div style="width: 100%;height: 128px;">
                                    <img src="images/pic_html5.gif" alt="" style="float: left;width: 128px">
                                    <div style="float: left;margin-left: 20px">
                                        <p>HTML5是HTML最新的修订版本，2014年10月由万维网联盟（W3C）完成标准制定。</p>
                                        <p>HTML5的设计目的是为了在移动设备上支持多媒体。</p>
                                        <p>HTML5 简单易学。</p>
                                    </div>
                                </div>
                                <hr>
                                <h4><b>什么是 HTML5?</b></h4>
                                <p>HTML5 是下一代 HTML 标准。</p>
                                <p>HTML , HTML 4.01的上一个版本诞生于 1999 年。自从那以后，Web 世界已经经历了巨变。</p>
                                <p>HTML5 仍处于完善之中。然而，大部分现代浏览器已经具备了某些 HTML5 支持。</p>
                                <hr>
                                <h4><b>HTML5 是如何起步的？</b></h4>
                                <p>HTML5 是 W3C 与 WHATWG 合作的结果,WHATWG 指 Web Hypertext Application Technology Working Group。</p>
                                <p>WHATWG 致力于 web 表单和应用程序，而 W3C 专注于 XHTML 2.0。在 2006 年，双方决定进行合作，来创建一个新版本的 HTML。</p>
                                <p>HTML5 中的一些有趣的新特性：</p>
                                <ul>
                                    <li>用于绘画的 canvas 元素</li>
                                    <li>用于媒介回放的 video 和 audio 元素</li>
                                    <li>对本地离线存储的更好的支持</li>
                                    <li>新的特殊内容元素，比如 article、footer、header、nav、section</li>
                                    <li>新的表单控件，比如 calendar、date、time、email、url、search</li>
                                </ul>
                                <hr>
                                <h4><b>HTML5 &lt;!DOCTYPE&gt;</b></h4>
                                <p>&lt;!DOCTYPE&gt; 声明必须位于 HTML5 文档中的第一行,使用非常简单:</p>
                                <pre class="code">&lt;!DOCTYPE html&gt;</pre>
                                <hr>
                                <h4><b>最小的HTML5文档</b></h4>
                                <p>下面是一个简单的HTML5文档：</p>
                                <pre class="code">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;title&gt;文档标题&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
文档内容......
&lt;/body&gt;

&lt;/html&gt;</pre>
                                <p><i><b>注意：</b>对于中文网页需要使用 &lt;meta charset="utf-8"&gt; 声明编码，否则会出现乱码。</i></p>
                                <hr>
                                <h4><b>HTML5 的改进</b></h4>
                                <ul>
                                    <li>新元素</li>
                                    <li>新属性</li>
                                    <li>完全支持 CSS3</li>
                                    <li>Video 和 Audio</li>
                                    <li>2D/3D 制图</li>
                                    <li>本地存储</li>
                                    <li>本地 SQL 数据</li>
                                    <li>Web 应用</li>
                                </ul>
                                <hr>
                                <h4><b>HTML5 多媒体</b></h4>
                                <p>使用 HTML5 你可以简单的在网页中播放 视频(video)与音频 (audio) 。</p>
                                <ul>
                                    <li>HTML5 &lt;video&gt;</li>
                                    <li>HTML5 &lt;audio&gt;</li>
                                </ul>
                                <hr>
                                <h4><b>HTML5 应用</b></h4>
                                <p>使用 HTML5 你可以简单地开发应用。</p>
                                <ul>
                                    <li>本地数据存储</li>
                                    <li>访问本地文件</li>
                                    <li>本地 SQL 数据</li>
                                    <li>缓存引用</li>
                                    <li>Javascript 工作者</li>
                                    <li>XHTMLHttpRequest 2</li>
                                </ul>
                                <hr>
                                <h4><b>HTML5 图形</b></h4>
                                <p>使用 HTML5 你可以简单的绘制图形:</p>
                                <ul>
                                    <li>使用 &lt;canvas&gt; 元素。</li>
                                    <li>使用内联 SVG。</li>
                                    <li>使用 CSS3 2D 转换、CSS3 3D 转换。</li>
                                </ul>
                                <hr>
                                <h4><b>HTML5 使用 CSS3</b></h4>
                                <ul>
                                    <li>新选择器</li>
                                    <li>新属性</li>
                                    <li>动画</li>
                                    <li>2D/3D 转换</li>
                                    <li>圆角</li>
                                    <li>阴影效果</li>
                                    <li>可下载的字体</li>
                                </ul>
                                <hr>
                                <h4><b>语义元素</b></h4>
                                <p>HTML5 添加了很多语义元素如下所示：</p>
                                <table class="table table-bordered" style="width: 800px">
                                    <tr class="info">
                                        <th>标签</th>
                                        <th>描述</th>
                                    </tr>
                                    <tr>
                                        <td>&lt;article&gt;</td>
                                        <td>定义页面独立的内容区域。</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;aside&gt;</td>
                                        <td>定义页面的侧边栏内容。</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;bdi&gt;</td>
                                        <td>允许您设置一段文本，使其脱离其父元素的文本方向设置。</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;command&gt;</td>
                                        <td>定义命令按钮，比如单选按钮、复选框或按钮</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;details&gt;</td>
                                        <td>用于描述文档或文档某个部分的细节</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;dialog&gt;</td>
                                        <td>定义对话框，比如提示框</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;summary&gt;</td>
                                        <td>标签包含 details 元素的标题</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;figure&gt;</td>
                                        <td>规定独立的流内容（图像、图表、照片、代码等等）</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;figcaption&gt;</td>
                                        <td>定义 &lt;figure&gt; 元素的标题</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;footer&gt;</td>
                                        <td>定义 section 或 document 的页脚。</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;header&gt;</td>
                                        <td>定义了文档的头部区域</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;mark&gt;</td>
                                        <td>定义带有记号的文本</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;meter&gt;</td>
                                        <td>定义度量衡。仅用于已知最大和最小值的度量</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;nav&gt;</td>
                                        <td>定义导航链接的部分</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;progress&gt;</td>
                                        <td>定义任何类型的任务的进度</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;ruby&gt;</td>
                                        <td>定义 ruby 注释（中文注音或字符）</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;rt&gt;</td>
                                        <td>定义字符（中文注音或字符）的解释或发音</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;rp&gt;</td>
                                        <td>在 ruby 注释中使用，定义不支持 ruby 元素的浏览器所显示的内容</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;section&gt;</td>
                                        <td>定义文档中的节（section、区段）</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;time&gt;</td>
                                        <td>定义日期或时间</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;wbr&gt;</td>
                                        <td>规定在文本中的何处适合添加换行符</td>
                                    </tr>
                                </table>
                                <hr>
                                <h4><b>已移除元素</b></h4>
                                <p>以下的 HTML 4.01 元素在HTML5中已经被删除:</p>
                                <ul>
                                    <li>&lt;acronym&gt;</li>
                                    <li>&lt;applet&gt;</li>
                                    <li>&lt;basefont&gt;</li>
                                    <li>&lt;big&gt;</li>
                                    <li>&lt;center&gt;</li>
                                    <li>&lt;dir&gt;</li>
                                    <li>&lt;font&gt;</li>
                                    <li>&lt;frame&gt;</li>
                                    <li>&lt;frameset&gt;</li>
                                    <li>&lt;noframes&gt;</li>
                                    <li>&lt;strike&gt;</li>
                                </ul>
                                <hr>
                                <h4><b>HTML5 浏览器支持</b></h4>
                                <p>最新版本的 Safari、Chrome、Firefox 以及 Opera 支持某些 HTML5 特性。Internet Explorer 9 将支持某些 HTML5 特性。</p>
                                <p>IE9 以下版本浏览器兼容HTML5的方法，使用本站的静态资源的html5shiv包：</p>
                                <pre class="code">&lt;!--[if lt IE9]&gt;
&lt;script src="http://cdn.static.runoob.com/libs/html5shiv/3.7/html5shiv.min.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;</pre>
                                <p>载入后，初始化新标签的CSS：</p>
                                <pre class="code">/*html5*/
article,aside,dialog,footer,header,section,footer,nav,figure,menu{display:block}</pre>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="h17">
                            <div>
                                <h3>HTML5 浏览器支持</h3>
                                <hr>
                                <p>你可以让一些较早的浏览器（不支持HTML5）支持 HTML5。</p>
                                <hr>
                                <h4><b>HTML5 浏览器支持</b></h4>
                                <p>现代的浏览器都支持 HTML5。</p>
                                <p>此外，所有浏览器，包括旧的和最新的，对无法识别的元素会作为内联元素自动处理。</p>
                                <p>正因为如此，你可以 "<b>教会</b>" 浏览器处理 "<b>未知</b>" 的 HTML 元素。</p>
                                <p><span class="glyphicon glyphicon-exclamation-sign" style="color: yellow"></span>&nbsp;<i>甚至你可以教会 IE6 (Windows XP 2001) 浏览器处理未知的 HTML 元素。</i></p>
                                <hr>
                                <h4><b>将 HTML5 元素定义为块元素</b></h4>
                                <p>HTML5 定了 8 个新的 HTML 语义（semantic） 元素。所有这些元素都是 块级 元素。</p>
                                <p>为了能让旧版本的浏览器正确显示这些元素，你可以设置 CSS 的 display 属性值为 block:</p>
                                <pre class="code">header, section, footer, aside, nav, main, article, figure {
    display: block;
}</pre>
                                <hr>
                                <h4><b>为 HTML 添加新元素</b></h4>
                                <p>你可以为 HTML 添加新的元素。</p>
                                <p>该实例向 HTML 添加的新的元素，并为该元素定义样式，元素名为 &lt;myHero&gt; ：</p>
                                <pre class="code">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;title&gt;为 HTML 添加新元素&lt;/title&gt;
&lt;script&gt;
    document.createElement("myHero")
&lt;/script&gt;
&lt;style&gt;
myHero {
    display: block;
    background-color: #ddd;
    padding: 50px;
    font-size: 30px;
}
&lt;/style&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;h1&gt;我的第一个标题&lt;/h1&gt;
&lt;p&gt;我的第一个段落。&lt;/p&gt;
&lt;myHero&gt;我的第一个新元素&lt;/myHero&gt;

&lt;/body&gt;
&lt;/html&gt;</pre>
                                <p>JavaScript 语句 <b>document.createElement("myHero")</b> 是为 IE 浏览器添加新的元素。</p>
                                <hr>
                                <h4><b>Internet Explorer 浏览器问题</b></h4>
                                <p>你可以使用以上的方法来为 IE 浏览器添加 HTML5 元素，但是：</p>
                                <p><span class="glyphicon glyphicon-exclamation-sign" style="color: yellow"></span>&nbsp;<i>Internet Explorer 8 及更早 IE 版本的浏览器不支持以上的方式。</i></p>
                                <p>我们可以使用 Sjoerd Visscher 创建的 "HTML5 Enabling JavaScript", "<b>shiv</b>" 来解决该问题:</p>
                                <pre class="code">&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;</pre>
                                <p>以上代码是一个注释，作用是在 IE 浏览器的版本小于 IE9 时将读取 html5.js 文件，并解析它。</p>
                                <p><b>注意：</b>国内用户请使用本站静态资源库（Google 资源库在国内不稳定）：</p>
                                <pre class="code">&lt;!--[if lt IE 9]&gt;
&lt;script src="http://cdn.static.runoob.com/libs/html5shiv/3.7/html5shiv.min.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;</pre>
                                <p>针对IE浏览器html5shiv 是比较好的解决方案。html5shiv主要解决HTML5提出的新的元素不被IE6-8识别，这些新元素不能作为父节点包裹子元素，并且不能应用CSS样式。</p>
                                <hr>
                                <h4><b>完美的 Shiv 解决方案</b></h4>
                                <pre class="code">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;title&gt;渲染 HTML5&lt;/title&gt;
    &lt;!--[if lt IE 9]&gt;
    &lt;script src="http://cdn.static.runoob.com/libs/html5shiv/3.7/html5shiv.min.js&gt;&lt;/script&gt;
    &lt;![endif]--&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;h1&gt;我的第一篇文章&lt;/h1&gt;

&lt;article&gt;
菜鸟教程 —— 学的不仅是技术，更是梦想！！！
&lt;/article&gt;

&lt;/body&gt;
&lt;/html&gt;</pre>
                                <p>html5shiv.js 引用代码必须放在 <head> 元素中，因为 IE 浏览器在解析 HTML5 新元素时需要先加载该文件。</p>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="h18">
                            <div>
                                <h3>HTML5 新元素</h3>
                                <hr>
                                <p>自1999年以后HTML 4.01 已经改变了很多,今天，在HTML 4.01中的几个已经被废弃，这些元素在HTML5中已经被删除或重新定义。</p>
                                <p>为了更好地处理今天的互联网应用，HTML5添加了很多新元素及功能，比如: 图形的绘制，多媒体内容，更好的页面结构，更好的形式 处理，和几个api拖放元素，定位，包括网页 应用程序缓存，存储，网络工作者等。</p>
                                <hr>
                                <h4><b>&lt;canvas&gt; 新元素</b></h4>
                                <table class="table table-bordered" style="width: 800px">
                                    <tr class="info">
                                        <th>标签</th>
                                        <th>描述</th>
                                    </tr>
                                    <tr>
                                        <td>&lt;canvas&gt;</td>
                                        <td>标签定义图形，比如图表和其他图像。该标签基于 JavaScript 的绘图 API</td>
                                    </tr>
                                </table>
                                <hr>
                                <h4><b>新多媒体元素</b></h4>
                                <table class="table table-bordered" style="width: 800px">
                                    <tr class="info">
                                        <th>标签</th>
                                        <th>描述</th>
                                    </tr>
                                    <tr>
                                        <td>&lt;audio&gt;</td>
                                        <td>定义音频内容</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;video&gt;</td>
                                        <td>定义视频（video 或者 movie）</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;source&gt;</td>
                                        <td>定义多媒体资源 &lt;video&gt; 和 &lt;audio&gt;</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;embed&gt;</td>
                                        <td>定义嵌入的内容，比如插件。</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;track&gt;</td>
                                        <td>为诸如 &lt;video&gt; 和 &lt;audio&gt; 元素之类的媒介规定外部文本轨道。</td>
                                    </tr>
                                </table>
                                <hr>
                                <h4><b>新表单元素</b></h4>
                                <table class="table table-bordered" style="width: 800px">
                                    <tr class="info">
                                        <th>标签</th>
                                        <th>描述</th>
                                    </tr>
                                    <tr>
                                        <td>&lt;datalist&gt;</td>
                                        <td>定义选项列表。请与 input 元素配合使用该元素，来定义 input 可能的值。</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;keygen&gt;</td>
                                        <td>规定用于表单的密钥对生成器字段。</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;output&gt;</td>
                                        <td>定义不同类型的输出，比如脚本的输出。</td>
                                    </tr>
                                </table>
                                <hr>
                                <h4><b>新的语义和结构元素</b></h4>
                                <p>HTML5 提供了新的元素来创建更好的页面结构：</p>
                                <table class="table table-bordered" style="width: 800px">
                                    <tr class="info">
                                        <th>标签</th>
                                        <th>描述</th>
                                    </tr>
                                    <tr>
                                        <td>&lt;article&gt;</td>
                                        <td>定义页面独立的内容区域。</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;aside&gt;</td>
                                        <td>定义页面的侧边栏内容。</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;bdi&gt;</td>
                                        <td>允许您设置一段文本，使其脱离其父元素的文本方向设置。</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;command&gt;</td>
                                        <td>定义命令按钮，比如单选按钮、复选框或按钮</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;details&gt;</td>
                                        <td>用于描述文档或文档某个部分的细节</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;dialog&gt;</td>
                                        <td>定义对话框，比如提示框</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;summary&gt;</td>
                                        <td>标签包含 details 元素的标题</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;figure&gt;</td>
                                        <td>规定独立的流内容（图像、图表、照片、代码等等）。</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;figcaption&gt;</td>
                                        <td>定义 &lt;figure&gt; 元素的标题</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;footer&gt;</td>
                                        <td>定义 section 或 document 的页脚。</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;header&gt;</td>
                                        <td>定义了文档的头部区域</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;mark&gt;</td>
                                        <td>定义带有记号的文本。</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;meter&gt;</td>
                                        <td>定义度量衡。仅用于已知最大和最小值的度量。</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;nav&gt;</td>
                                        <td>定义导航链接的部分。</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;progress&gt;</td>
                                        <td>定义任何类型的任务的进度。</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;ruby&gt;</td>
                                        <td>定义 ruby 注释（中文注音或字符）。</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;rt&gt;</td>
                                        <td>定义字符（中文注音或字符）的解释或发音。</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;rp&gt;</td>
                                        <td>在 ruby 注释中使用，定义不支持 ruby 元素的浏览器所显示的内容。</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;section&gt;</td>
                                        <td>定义文档中的节（section、区段）。</td>
                                    </tr>
                                    <tr class="success">
                                        <td>&lt;time&gt;</td>
                                        <td>定义日期或时间。</td>
                                    </tr>
                                    <tr>
                                        <td>&lt;wbr&gt;</td>
                                        <td>规定在文本中的何处适合添加换行符。</td>
                                    </tr>
                                </table>
                                <hr>
                                <h4><b>已移除的元素</b></h4>
                                <p>以下的 HTML 4.01 元素在HTML5中已经被删除:</p>
                                <ul>
                                    <li>&lt;acronym&gt;</li>
                                    <li>&lt;applet&gt;</li>
                                    <li>&lt;basefont&gt;</li>
                                    <li>&lt;big&gt;</li>
                                    <li>&lt;center&gt;</li>
                                    <li>&lt;dir&gt;</li>
                                    <li>&lt;font&gt;</li>
                                    <li>&lt;frame&gt;</li>
                                    <li>&lt;frameset&gt;</li>
                                    <li>&lt;noframes&gt;</li>
                                    <li>&lt;strike&gt;</li>
                                    <li>&lt;tt&gt;</li>
                                </ul>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="h19">
                            <div>
                                <h3>HTML5 新的 Input 类型</h3>
                                <p>HTML5 拥有多个新的表单输入类型。这些新特性提供了更好的输入控制和验证。</p>
                                <p>本章全面介绍这些新的输入类型：</p>
                                <ul>
                                    <li>color</li>
                                    <li>date</li>
                                    <li>datetime</li>
                                    <li>datetime-local</li>
                                    <li>email</li>
                                    <li>month</li>
                                    <li>number</li>
                                    <li>range</li>
                                    <li>search</li>
                                    <li>tel</li>
                                    <li>time</li>
                                    <li>url</li>
                                    <li>week</li>
                                </ul>
                                <p><b>注意:</b>并不是所有的主流浏览器都支持新的input类型，不过您已经可以在所有主流的浏览器中使用它们了。即使不被支持，仍然可以显示为常规的文本域。</p>
                                <hr>
                                <h4><b>Input 类型: color</b></h4>
                                <p>color 类型用在input字段主要用于选取颜色，如下所示：</p>
                                <pre class="code">选择你喜欢的颜色: &lt;input type="color" name="favcolor"&gt;</pre>
                                选择你喜欢的颜色: <input type="color" name="favcolor">
                                <hr>
                                <h4><b>Input 类型: date</b></h4>
                                <p>date 类型允许你从一个日期选择器选择一个日期。</p>
                                <pre class="code">生日: &lt;input type="date" name="bday"&gt;</pre>
                                生日: <input type="date" name="bday">
                                <hr>
                                <h4><b>Input 类型: datetime</b></h4>
                                <p>datetime 类型允许你选择一个日期（UTC 时间）。</p>
                                <pre class="code">生日 (日期和时间): &lt;input type="datetime" name="bdaytime"&gt;</pre>
                                生日 (日期和时间): <input type="datetime" name="bdaytime">
                                <hr>
                                <h4><b>Input 类型: datetime-local</b></h4>
                                <p>datetime-local 类型允许你选择一个日期和时间 (无时区).</p>
                                <pre class="code">生日 (日期和时间): &lt;input type="datetime-local" name="bdaytime"&gt;</pre>
                                生日 (日期和时间): <input type="datetime-local" name="bdaytime">
                                <hr>
                                <h4><b>Input 类型: email</b></h4>
                                <p>email 类型用于应该包含 e-mail 地址的输入域。</p>
                                <pre class="code">E-mail: &lt;input type="email" name="email"&gt;</pre>
                                E-mail: <input type="email" name="email">
                                <p><b>提示:</b> iPhone 中的 Safari 浏览器支持 email 输入类型，并通过改变触摸屏键盘来配合它（添加 @ 和 .com 选项）。</p>
                                <hr>
                                <h4><b>Input 类型: month</b></h4>
                                <p>month 类型允许你选择一个月份。</p>
                                <pre class="code">生日 (月和年): &lt;input type="month" name="bdaymonth"&gt;</pre>
                                生日 (月和年): <input type="month" name="bdaymonth">
                                <hr>
                                <h4><b>Input 类型: number</b></h4>
                                <p>number 类型用于应该包含数值的输入域。</p>
                                <p>您还能够设定对所接受的数字的限定：</p>
                                <pre class="code">数量 ( 1 到 5 之间 ): &lt;input type="number" name="quantity" min="1" max="5"&gt;</pre>
                                数字 ( 1 到 5 之间 ): <input type="number" name="quantity" min="1" max="5">
                                <p>使用下面的属性来规定对数字类型的限定：</p>
                                <table class="table table-bordered" style="width: 800px">
                                    <tr class="info">
                                        <th>属性</th>
                                        <th>描述</th>
                                    </tr>
                                    <tr>
                                        <td>disabled</td>
                                        <td>规定输入字段是禁用的</td>
                                    </tr>
                                    <tr class="success">
                                        <td>max</td>
                                        <td>规定允许的最大值</td>
                                    </tr>
                                    <tr>
                                        <td>maxlength</td>
                                        <td>规定输入字段的最大字符长度</td>
                                    </tr>
                                    <tr class="success">
                                        <td>min</td>
                                        <td>规定允许的最小值</td>
                                    </tr>
                                    <tr>
                                        <td>pattern</td>
                                        <td>规定用于验证输入字段的模式</td>
                                    </tr>
                                    <tr class="success">
                                        <td>readonly</td>
                                        <td>规定输入字段的值无法修改</td>
                                    </tr>
                                    <tr>
                                        <td>required</td>
                                        <td>规定输入字段的值是必需的</td>
                                    </tr>
                                    <tr class="success">
                                        <td>size</td>
                                        <td>规定输入字段中的可见字符数</td>
                                    </tr>
                                    <tr>
                                        <td>step</td>
                                        <td>规定输入字段的的合法数字间隔</td>
                                    </tr>
                                    <tr class="success">
                                        <td>value</td>
                                        <td>规定输入字段的默认值</td>
                                    </tr>
                                </table>
                                <hr>
                                <h4><b>Input 类型: range</b></h4>
                                <p>range 类型用于应该包含一定范围内数字值的输入域。</p>
                                <p>range 类型显示为滑动条。</p>
                                <pre class="code">&lt;input type="range" name="points" min="1" max="10"&gt;</pre>
                                <input type="range" name="points" min="1" max="10" style="width: 300px">
                                <p>请使用下面的属性来规定对数字类型的限定：</p>
                                <ul>
                                    <li>max - 规定允许的最大值</li>
                                    <li>min - 规定允许的最小值</li>
                                    <li>step - 规定合法的数字间隔</li>
                                    <li>value - 规定默认值</li>
                                </ul>
                                <hr>
                                <h4><b>Input 类型: search</b></h4>
                                <p>search 类型用于搜索域，比如站点搜索或 Google 搜索。</p>
                                <pre class="code">Search Google: &lt;input type="search" name="googlesearch"&gt;</pre>
                                Search Google: <input type="search" name="googlesearch">
                                <hr>
                                <h4><b>Input 类型: tel</b></h4>
                                <p>定义输入电话号码字段:</p>
                                <pre class="code">电话号码: &lt;input type="tel" name="usrtel"&gt;</pre>
                                电话号码: <input type="tel" name="usrtel">
                                <hr>
                                <h4><b>Input 类型: time</b></h4>
                                <p>time 类型允许你选择一个时间。</p>
                                <pre class="code">选择时间: &lt;input type="time" name="usr_time"&gt;</pre>
                                选择时间: <input type="time" name="usr_time">
                                <hr>
                                <h4><b>Input 类型: url</b></h4>
                                <p>url 类型用于应该包含 URL 地址的输入域。</p>
                                <p>在提交表单时，会自动验证 url 域的值。</p>
                                <pre class="code">添加您的主页: &lt;input type="url" name="homepage"&gt;</pre>
                                添加您的主页: <input type="url" name="homepage">
                                <p><b>提示: </b>iPhone 中的 Safari 浏览器支持 url 输入类型，并通过改变触摸屏键盘来配合它（添加 .com 选项）。</p>
                                <hr>
                                <h4><b>Input 类型: week</b></h4>
                                <p>week 类型允许你选择周和年。</p>
                                <pre class="code">选择周: &lt;input type="week" name="week_year"&gt;</pre>
                                选择周: <input type="week" name="week_year">
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="h20">
                            <div>
                                <h3>HTML5 表单元素、属性</h3>
                                <hr>
                                <h4><b>HTML5 新的表单元素</b></h4>
                                <p>HTML5 有以下新的表单元素:</p>
                                <ul>
                                    <li>&lt;datalist&gt;</li>
                                    <li>&lt;keygen&gt;</li>
                                    <li>&lt;output&gt;</li>
                                </ul>
                                <p><b>注意:</b>不是所有的浏览器都支持HTML5 新的表单元素，但是你可以在使用它们，即使浏览器不支持表单属性，仍然可以显示为常规的表单元素。</p>
                                <hr>
                                <h4><b>HTML5 &lt;datalist&gt; 元素</b></h4>
                                <p>&lt;datalist&gt; 元素规定输入域的选项列表。</p>
                                <p>&lt;datalist&gt; 属性规定 form 或 input 域应该拥有自动完成功能。当用户在自动完成域中开始输入时，浏览器应该在该域中显示填写的选项：</p>
                                <p>使用 &lt;input&gt; 元素的列表属性与 &lt;datalist&gt; 元素绑定.</p>
                                <pre class="code">&lt;input list="browsers"&gt;

&lt;datalist id="browsers"&gt;
  &lt;option value="Internet Explorer"&gt;
  &lt;option value="Firefox"&gt;
  &lt;option value="Chrome"&gt;
  &lt;option value="Opera"&gt;
  &lt;option value="Safari"&gt;
&lt;/datalist&gt;</pre>
                                <input list="browsers">

                                <datalist id="browsers">
                                    <option value="Internet Explorer">
                                    <option value="Firefox">
                                    <option value="Chrome">
                                    <option value="Opera">
                                    <option value="Safari">
                                </datalist>
                                <hr>
                                <h4><b>HTML5 &lt;keygen&gt; 元素</b></h4>
                                <p>&lt;keygen&gt; 元素的作用是提供一种验证用户的可靠方法。</p>
                                <p>&lt;keygen&gt; 标签规定用于表单的密钥对生成器字段。</p>
                                <p>当提交表单时，会生成两个键，一个是私钥，一个公钥。</p>
                                <p>私钥（private key）存储于客户端，公钥（public key）则被发送到服务器。公钥可用于之后验证用户的客户端证书（client certificate）。</p>
                                <pre class="code">&lt;form action="demo_keygen.asp" method="get"&gt;
用户名: &lt;input type="text" name="usr_name"&gt;
加密: &lt;keygen name="security"&gt;
&lt;input type="submit"&gt;
&lt;/form&gt;</pre>
                                <hr>
                                <h4><b>HTML5 &lt;output&gt; 元素</b></h4>
                                <p>&lt;output&gt; 元素用于不同类型的输出，比如计算或脚本输出：</p>
                                <pre class="code">&lt;form oninput="x.value=parseInt(a.value)+parseInt(b.value)"&gt;0
&lt;input type="range" id="a" value="50"&gt;100 +
&lt;input type="number" id="b" value="50"&gt;=
&lt;output name="x" for="a b"&gt;&lt;/output&gt;
&lt;/form&gt;</pre>
                                <form oninput="x.value=parseInt(a.value)+parseInt(b.value);y.value=parseInt(a.value)">
                                    <input type="range" id="a" value="50" style="width: 300px">
                                    <p><output name="y" for="a" style="display: inline-block"></output>+
                                    <input type="number" id="b" value="50" style="display: inline-block">=
                                    <output name="x" for="a b" style="display: inline-block"></output></p>
                                </form>
                                <hr>
                                <h4><b>HTML5 新的表单属性</b></h4>
                                <p>HTML5 的 <form> 和 <input>标签添加了几个新属性.</p>
                                <p>&lt;form&gt; 新属性：</p>
                                <ul>
                                    <li>autocomplete</li>
                                    <li>novalidate</li>
                                </ul>
                                <p>&lt;input&gt; 新属性</p>
                                <ul>
                                    <li>autocomplete</li>
                                    <li>autofocus</li>
                                    <li>form</li>
                                    <li>formaction</li>
                                    <li>formenctype</li>
                                    <li>formmethod</li>
                                    <li>formnovalidate</li>
                                    <li>formtarget</li>
                                    <li>height 与 width</li>
                                    <li>list</li>
                                    <li>min 与 max</li>
                                    <li>multiple</li>
                                    <li>pattern (regexp)</li>
                                    <li>placeholder</li>
                                    <li>required</li>
                                    <li>step</li>
                                </ul>
                                <hr>
                                <h4><b>&lt;form&gt; / &lt;input&gt; autocomplete 属性</b></h4>
                                <p>autocomplete 属性规定 form 或 input 域应该拥有自动完成功能。</p>
                                <p>当用户在自动完成域中开始输入时，浏览器应该在该域中显示填写的选项。</p>
                                <p><b>提示:</b> autocomplete 属性有可能在 form元素中是开启的，而在input元素中是关闭的。</p>
                                <p><b>注意: </b>autocomplete 适用于 &lt;form&gt; 标签，以及以下类型的 &gt;input&gt; 标签：text, search, url, telephone, email, password, datepickers, range 以及 color。</p>
                                <pre class="code">&lt;form action="demo-form.php" autocomplete="on"&gt;
  First name:&lt;input type="text" name="fname"&gt;&lt;br&gt;
  Last name: &lt;input type="text" name="lname"&gt;&lt;br&gt;
  E-mail: &lt;input type="email" name="email" autocomplete="off"&gt;&lt;br&gt;
  &lt;input type="submit"&gt;
&lt;/form&gt;</pre>
                                <p><b>提示:</b>某些浏览器中，您可能需要启用自动完成功能，以使该属性生效。</p>
                                <hr>
                                <h4><b>&lt;form&gt; novalidate 属性</b></h4>
                                <p>novalidate 属性是一个 boolean(布尔) 属性.</p>
                                <p>novalidate 属性规定在提交表单时不应该验证 form 或 input 域。</p>
                                <pre class="code">&lt;form action="demo-form.php" novalidate&gt;
  E-mail: &lt;input type="email" name="user_email"&gt;
  &lt;input type="submit"&gt;
&lt;/form&gt;</pre>
                                <hr>
                                <h4><b>&lt;input&gt; autofocus 属性</b></h4>
                                <p>autofocus 属性是一个 boolean 属性.</p>
                                <p>autofocus 属性规定在页面加载时，域自动地获得焦点。</p>
                                <pre class="code">First name:&lt;input type="text" name="fname" autofocus&gt;</pre>
                                <hr>
                                <h4><b>&lt;input&gt; form 属性</b></h4>
                                <p>form 属性规定输入域所属的一个或多个表单。</p>
                                <p><b>提示:</b>如需引用一个以上的表单，请使用空格分隔的列表。</p>
                                <p><i>位于form表单外的 input 字段引用了 HTML form (该 input 表单仍然属于form表单的一部分):</i></p>
                                <pre class="code">&lt;form action="demo-form.php" id="form1"&gt;
  First name: &lt;input type="text" name="fname"&gt;&lt;br&gt;
  &lt;input type="submit" value="提交"&gt;
&lt;/form&gt;

Last name: &lt;input type="text" name="lname" form="form1"&gt;</pre>
                                <hr>
                                <h4><b>&lt;input&gt; formaction 属性</b></h4>
                                <p>The formaction 属性用于描述表单提交的URL地址.</p>
                                <p>The formaction 属性会覆盖 &lt;form&gt; 元素中的action属性.</p>
                                <p>注意: The formaction 属性用于 type="submit" 和 type="image".</p>
                                <pre class="code">&lt;form action="demo-form.php"&gt;
  First name: &lt;input type="text" name="fname"&gt;&lt;br&gt;
  Last name: &lt;input type="text" name="lname">&lt;br&gt;
  &lt;input type="submit" value="提交"&gt;&lt;br&gt;
  &lt;input type="submit" formaction="demo-admin.php"
         value="提交"&gt;
&lt;/form&gt;</pre>
                                <hr>
                                <h4><b>&lt;input&gt; formenctype 属性</b></h4>
                                <p>formenctype 属性描述了表单提交到服务器的数据编码 (只对form表单中 method="post" 表单)</p>
                                <p>formenctype 属性覆盖 form 元素的 enctype 属性。</p>
                                <p><b>主要:</b> 该属性与 type="submit" 和 type="image" 配合使用。</p>
                                <p><i>第一个提交按钮已默认编码发送表单数据，第二个提交按钮以 "multipart/form-data" 编码格式发送表单数据:</i></p>
                                <pre class="code">&lt;form action="demo-post_enctype.php" method="post"&gt;
  First name: &lt;input type="text" name="fname"&gt;&lt;br&gt;
  &lt;input type="submit" value="提交"&gt;
  &lt;input type="submit" formenctype="multipart/form-data"
         value="以 Multipart/form-data 提交"&gt;
&lt;/form&gt;</pre>
                                <hr>
                                <h4><b>&lt;input&gt; formmethod 属性</b></h4>
                                <p>formmethod 属性定义了表单提交的方式。</p>
                                <p>formmethod 属性覆盖了 &lt;form&gt; 元素的的method 属性。</p>
                                <p><b>注意:</b> 该属性可以与 type="submit" 和 type="image" 配合使用。</p>
                                <pre class="code">&lt;form action="demo-form.php" method="get"&gt;
  First name: &lt;input type="text" name="fname"&gt;&lt;br&gt;
  Last name: &lt;input type="text" name="lname"&gt;&lt;br&gt;
  &lt;input type="submit" value="提交"&gt;
  &lt;input type="submit" formmethod="post" formaction="demo-post.php"
         value="使用 POST 提交"&gt;
&lt;/form&gt;</pre>
                                <hr>
                                <h4><b>&lt;input&gt; formnovalidate 属性</b></h4>
                                <p>novalidate 属性是一个 boolean 属性.</p>
                                <p>novalidate属性描述了 &lt;input&gt; 元素在表单提交时无需被验证。</p>
                                <p>formnovalidate 属性会覆盖 &lt;form&gt; 元素的novalidate属性.</p>
                                <p><b>注意:</b> formnovalidate 属性与type="submit一起使用</p>
                                <pre class="code">&lt;form action="demo-form.php"&gt;
  E-mail: &lt;input type="email" name="userid"&gt;&lt;br&gt;
  &lt;input type="submit" value="提交"&gt;&lt;br&gt;
  &lt;input type="submit" formnovalidate value="不验证提交"&gt;
&lt;/form&gt;</pre>
                                <hr>
                                <h4><b>&lt;input&gt; formtarget 属性</b></h4>
                                <p>formtarget 属性指定一个名称或一个关键字来指明表单提交数据接收后的展示。</p>
                                <p>The formtarget 属性覆盖 &lt;form&gt; 元素的target属性.</p>
                                <p><b>注意:</b> formtarget 属性与type="submit" 和 type="image"配合使用.</p>
                                <pre class="code">&lt;form action="demo-form.php"&gt;
  First name: &lt;input type="text" name="fname"&gt;&lt;br&gt;
  Last name: &lt;input type="text" name="lname"&gt;&lt;br&gt;
  &lt;input type="submit" value="正常提交"&gt;
  &lt;input type="submit" formtarget="_blank"
         value="提交到一个新的页面上"&gt;
&lt;/form&gt;</pre>
                                <hr>
                                <h4><b>&lt;input&gt; height 和 width 属性</b></h4>
                                <p>height 和 width 属性规定用于 image 类型的 &lt;input&gt; 标签的图像高度和宽度。</p>
                                <p><b>注意:</b> height 和 width 属性只适用于 image 类型的&lt;input&gt; 标签。</p>
                                <p><b>提示:</b> 图像通常会同时指定高度和宽度属性。如果图像设置高度和宽度，图像所需的空间 在加载页时会被保留。如果没有这些属性， 浏览器不知道图像的大小，并不能预留 适当的空间。图片在加载过程中会使页面布局效果改变 （尽管图片已加载）。</p>
                                <pre class="code">&lt;input type="image" src="img_submit.gif" alt="Submit" width="48" height="48"&gt;</pre>
                                <hr>
                                <h4><b>&lt;input&gt; list 属性</b></h4>
                                <p>list 属性规定输入域的 datalist。datalist 是输入域的选项列表。</p>
                                <pre class="code">&lt;input list="browsers"&gt;

&lt;datalist id="browsers"&gt;
  &lt;option value="Internet Explorer"&gt;
  &lt;option value="Firefox"&gt;
  &lt;option value="Chrome"&gt;
  &lt;option value="Opera"&gt;
  &lt;option value="Safari"&gt;
&lt;/datalist&gt;</pre>
                                实例：<input list="browsers">
                                <datalist id="browsers">
                                    <option value="Internet Explorer">
                                    <option value="Firefox">
                                    <option value="Chrome">
                                    <option value="Opera">
                                    <option value="Safari">
                                </datalist>
                                <hr>
                                <h4><b>&lt;input&gt; min 和 max 属性</b></h4>
                                <p>min、max 和 step 属性用于为包含数字或日期的 input 类型规定限定（约束）。</p>
                                <p><b>注意:</b> min、max 和 step 属性适用于以下类型的 <input> 标签：date pickers、number 以及 range。</p>
                                <pre class="code">Enter a date before 1980-01-01:
&lt;input type="date" name="bday" max="1979-12-31"&gt;

Enter a date after 2000-01-01:
&lt;input type="date" name="bday" min="2000-01-02"&gt;

Quantity (between 1 and 5):
&lt;input type="number" name="quantity" min="1" max="5"&gt;</pre>
                                Enter a date before 1980-01-01:
                                <input type="date" name="bday" max="1979-12-31"><br>
                                Enter a date after 2000-01-01:
                                <input type="date" name="bday" min="2000-01-02"><br>
                                Quantity (between 1 and 5):
                                <input type="number" name="quantity" min="1" max="5">
                                <hr>
                                <h4><b>&lt;input&gt; multiple 属性</b></h4>
                                <p>multiple 属性是一个 boolean 属性.</p>
                                <p>multiple 属性规定 &lt;input&gt; 元素中可选择多个值。</p>
                                <p><b>注意:</b> multiple 属性适用于以下类型的 &lt;input&gt; 标签：email 和 file:</p>
                                <pre class="code">Select images: &lt;input type="file" name="img" multiple&gt;</pre>
                                <hr>
                                <h4><b>&lt;input&gt; pattern 属性</b></h4>
                                <p>pattern 属性描述了一个正则表达式用于验证 &lt;input&gt; 元素的值。</p>
                                <p><b>注意:</b> pattern 属性适用于以下类型的 &lt;input&gt; 标签: text, search, url, tel, email, 和 password.</p>
                                <p><b>提示:</b> 是用来全局 title 属性描述了模式.</p>
                                <p><b>提示:</b> 您可以在我们的 JavaScript 教程中学习到有关正则表达式的内容</p>
                                <p><i>下面的例子显示了一个只能包含三个字母的文本域（不含数字及特殊字符）：</i></p>
                                <pre class="code">Country code: &lt;input type="text" name="country_code" pattern="[A-Za-z]{3}" title="Three letter country code"&gt;</pre>
                                <hr>
                                <h4><b>&lt;input&gt; placeholder 属性</b></h4>
                                <p>placeholder 属性提供一种提示（hint），描述输入域所期待的值。</p>
                                <p>简短的提示在用户输入值前会显示在输入域上。</p>
                                <p><b>注意: </b>placeholder 属性适用于以下类型的 &lt;input&gt; 标签：text, search, url, telephone, email 以及 password。</p>
                                <pre class="code">&lt;input type="text" name="fname" placeholder="First name"&gt;</pre>
                                <input type="text" name="fname" placeholder="First name">
                                <hr>
                                <h4><b>&lt;input&gt; required 属性</b></h4>
                                <p>required 属性是一个 boolean 属性.</p>
                                <p>required 属性规定必须在提交之前填写输入域（不能为空）。</p>
                                <p><b>注意:</b> required 属性适用于以下类型的 &lt;input&gt; 标签：text, search, url, telephone, email, password, date pickers, number, checkbox, radio 以及 file。</p>
                                <pre class="code">Username: &lt;input type="text" name="usrname" required&gt;</pre>
                                <hr>
                                <h4><b>&lt;input&gt; step 属性</b></h4>
                                <p>step 属性为输入域规定合法的数字间隔。</p>
                                <p>如果 step="3"，则合法的数是 -3,0,3,6 等</p>
                                <p><b>提示：</b> step 属性可以与 max 和 min 属性创建一个区域值.</p>
                                <p><b>注意: </b>step 属性与以下type类型一起使用: number, range, date, datetime, datetime-local, month, time 和 week.</p>
                                <pre class="code">&lt;input type="number" name="points" step="3"&gt;</pre>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="h21">
                            <div>
                                <h3>HTML5 语义元素</h3>
                                <hr>
                                <p>语义= 意义.</p>
                                <p>语义元素 = 元素的意义.</p>
                                <hr>
                                <h4><b>什么是语义元素?</b></h4>
                                <p>一个语义元素能够清楚的描述其意义给浏览器和开发者。</p>
                                <p><b>无语义</b> 元素实例: &lt;div&gt; 和 &lt;span&gt; - 无需考虑内容.</p>
                                <p><b>语义元素</b>实例: &lt;form&gt;, &lt;table&gt;, and &lt;img&gt; - 清楚的定义了它的内容.</p>
                                <hr>
                                <h4><b>浏览器支持</b></h4>
                                <p>Internet Explorer 9+, Firefox, Chrome, Safari 和 Opera 支持语义元素。</p>
                                <p><b>注意: </b>Internet Explorer 8及更早版本不支持该元素. 但是文章底部提供了兼容的解决方法.</p>
                                <hr>
                                <h4><b>HTML5 中新的语义元素</b></h4>
                                <p>许多现有网站都包含以下HTML代码： &lt;div id="nav"&gt;, &lt;div class="header"&gt;, 或者 &lt;div id="footer"&gt;, 来指明导航链接, 头部, 以及尾部.</p>
                                <div>
                                    <div style="float: left">
                                        <p>HTML5提供了新的语义元素来明确一个Web页面的不同部分:</p>
                                        <ul>
                                            <li>&lt;header&gt;</li>
                                            <li>&lt;nav&gt;</li>
                                            <li>&lt;section&gt;</li>
                                            <li>&lt;article&gt;</li>
                                            <li>&lt;aside&gt;</li>
                                            <li>&lt;figcaption&gt;</li>
                                            <li>&lt;figure&gt;</li>
                                            <li>&lt;footer&gt;</li>
                                        </ul>
                                    </div>
                                    <div style="float: left">
                                        <img src="images/img_elements.gif" alt="">
                                    </div>
                                    <div style="clear: left"></div>
                                </div>
                                <hr>
                                <h4><b>HTML5 &lt;section&gt; 元素</b></h4>
                                <p>&lt;section&gt; 标签定义文档中的节（section、区段）。比如章节、页眉、页脚或文档中的其他部分。</p>
                                <p>根据W3C HTML5文档: section 包含了一组内容及其标题。</p>
                                <pre class="code">&lt;section&gt;
  &lt;h1&gt;WWF&lt;/h1&gt;
  &lt;p&gt;The World Wide Fund for Nature (WWF) is....&lt;/p&gt;
&lt;/section&gt;</pre>
                                <hr>
                                <h4><b>HTML5 &lt;article&gt; 元素</b></h4>
                                <p>&lt;article&gt; 标签定义独立的内容。</p>
                                <p>&lt;article&gt; 元素使用实例:</p>
                                <ul>
                                    <li>Forum post</li>
                                    <li>Blog post</li>
                                    <li>News story</li>
                                    <li>Comment</li>
                                </ul>
                                <pre class="code">&lt;article&gt;
  &lt;h1&gt;Internet Explorer 9&lt;/h1&gt;
  &lt;p&gt;Windows Internet Explorer 9(缩写为 IE9 )在2011年3月14日21:00 发布。&lt;/p&gt;
&lt;article&gt;</pre>
                                <hr>
                                <h4><b>HTML5 &lt;nav&gt; 元素</b></h4>
                                <p>&lt;nav&gt; 标签定义导航链接的部分。</p>
                                <p>&lt;nav&gt; 元素用于定义页面的导航链接部分区域，但是，不是所有的链接都需要包含在 <nav> 元素中!</p>
                                <pre class="code">&lt;nav&gt;
    &lt;a href="/html/"&gt;HTML&lt;/a&gt; |
    &lt;a href="/css/"&gt;CSS&lt;/a&gt; |
    &lt;a href="/js/"&gt;JavaScript&lt;/a&gt; |
    &lt;a href="/jquery/"&gt;jQuery&lt;/a&gt;
&lt;/nav&gt;</pre>
                                <hr>
                                <h4><b>HTML5 &lt;aside&gt; 元素</b></h4>
                                <p>&lt;aside&gt; 标签定义页面主区域内容之外的内容（比如侧边栏）。</p>
                                <p>aside 标签的内容应与主区域的内容相关。</p>
                                <pre class="code">&lt;p&gt;My family and I visited The Epcot center this summer.&lt;/p&gt;

&lt;aside&gt;
  &lt;h4&gt;Epcot Center&lt;/h4&gt;
  &lt;p&gt;The Epcot Center is a theme park in Disney World, Florida.&lt;/p&gt;
&lt;/aside&gt;</pre>
                                <hr>
                                <h4><b>HTML5 &lt;header&gt; 元素</b></h4>
                                <p>&lt;header&gt; 元素描述了文档的头部区域</p>
                                <p>&lt;header&gt; 元素注意用于定义内容的介绍展示区域.</p>
                                <p>在页面中你可以使用多个 &lt;header&gt; 元素.</p>
                                <p>以下实例定义了文章的头部:</p>
                                <pre class="code">&lt;article&gt;
  &lt;header&gt;
    &lt;h1&gt;Internet Explorer 9&lt;/h1&gt;
    &lt;p&gt;&lt;time pubdate datetime="2011-03-15">&lt;/time&gt;&lt;/p&gt;
  &lt;/header&gt;
  &lt;p&gt;Windows Internet Explorer 9(缩写为 IE9 )是在2011年3月14日21:00发布的&lt;/p&gt;
&lt;/article&gt;</pre>
                                <hr>
                                <h4><b>HTML5 &lt;footer&gt; 元素</b></h4>
                                <p>&lt;footer&gt; 元素描述了文档的底部区域</p>
                                <p>&lt;footer&gt; 元素应该包含它的包含元素</p>
                                <p>一个页脚通常包含文档的作者，著作权信息，链接的使用条款，联系信息等</p>
                                <p>文档中你可以使用多个 &lt;footer&gt; 元素</p>
                                <pre class="code">&lt;footer&gt;
  &lt;p&gt;Posted by: Hege Refsnes&lt;/p&gt;
  &lt;p&gt;&lt;time pubdate datetime="2012-03-01"&gt;&lt;/time&gt;&lt;/p&gt;
&lt;/footer&gt;</pre>
                                <hr>
                                <h4><b>HTML5 &lt;figure&gt; 和 &lt;figcaption&gt; 元素</b></h4>
                                <p>&lt;figure&gt; 标签规定独立的流内容（图像、图表、照片、代码等等）。</p>
                                <p>&lt;figure&gt; 元素的内容应该与主内容相关，但如果被删除，则不应对文档流产生影响。</p>
                                <p>&lt;figcaption&gt; 标签定义 &lt;figure&gt; 元素的标题.</p>
                                <p>&lt;figcaption&gt; 元素应该被置于 "figure" 元素的第一个或最后一个子元素的位置。</p>
                                <pre class="code">&lt;figure&gt;
  &lt;img src="img_pulpit.jpg" alt="The Pulpit Rock" width="304" height="228"&gt;
  &lt;figcaption&gt;Fig1. - The Pulpit Pock, Norway.&lt;/figcaption&gt;
&lt;/figure&gt;</pre>
                                <hr>
                                <h4><b>我们可以开始使用这些语义元素吗?</b></h4>
                                <p>以上的元素都是块元素(除了&lt;figcaption&gt;).</p>
                                <p>为了让这些块及元素在所有版本的浏览器中生效，你需要在样式表文件中设置一下属性 (以下样式代码可以让旧版本浏览器支持本章介绍的块级元素):</p>
                                <pre class="code">header, section, footer, aside, nav, article, figure
{
    display: block;
}</pre>
                                <hr>
                                <h4><b>Internet Explorer 8 及更早IE版本中的问题</b></h4>
                                <p>IE8 及更早IE版本无法在这些元素中渲染CSS效果，以至于你不能使用 &lt;header&gt;, &lt;section&gt;, &lt;footer&gt;, &lt;aside&gt;, &lt;nav&gt;, &lt;article&gt;, &lt;figure&gt;, 或者其他的HTML5 elements.</p>
                                <p><b>解决办法:</b> 你可以使用HTML5 Shiv Javascript脚本来解决IE的兼容问题。HTML5 Shiv下载地址：</p>
                                <p><a href="http://cdn.static.runoob.com/libs/html5shiv/3.7/html5shiv.min.js">http://cdn.static.runoob.com/libs/html5shiv/3.7/html5shiv.min.js</a></p>
                                <p>下载后，将以下代码放入的网页中：</p>
                                <pre class="code">&lt;!--[if lt IE 9]&gt;
&lt;script src="html5shiv.js"&gt;&lt;/script&gt;
 &lt;![endif]--&gt;</pre>
                                <p>以上代码在浏览器小于 IE9 版本时会加载html5shiv.js文件. 你必须将其放置于 &lt;head&gt; 元素中，因为 IE 浏览器需要在头部加载后渲染这些 HTML5 的新元素</p>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="h22"></div>
                    </div>
                </div>
            </div>
            <div role="tabpanel" class="tab-pane" id="css">
                <div>
                    <ul class="nav nav-pills study_nav" role="tablist">
                        <li><h2><b>CSS</b></h2></li>
                        <li role="presentation" class="active"><a href="#c1" aria-controls="home" role="tab" data-toggle="tab">CSS 介绍</a></li>
                        <li role="presentation"><a href="#c2" aria-controls="home" role="tab" data-toggle="tab">CSS 语法</a></li>
                        <li role="presentation"><a href="#c3" aria-controls="home" role="tab" data-toggle="tab">CSS id 和 class 选择器</a></li>
                        <li role="presentation"><a href="#c4" aria-controls="home" role="tab" data-toggle="tab">CSS 创建</a></li>
                        <li role="presentation"><a href="#c5" aria-controls="home" role="tab" data-toggle="tab">CSS Backgrounds(背景)</a></li>
                        <li role="presentation"><a href="#c6" aria-controls="home" role="tab" data-toggle="tab">CSS Text(文本)</a></li>
                        <li role="presentation"><a href="#c7" aria-controls="home" role="tab" data-toggle="tab">CSS Fonts(字体)</a></li>
                        <li role="presentation"><a href="#c8" aria-controls="home" role="tab" data-toggle="tab">CSS link(链接)</a></li>
                        <li role="presentation"><a href="#c9" aria-controls="home" role="tab" data-toggle="tab">CSS 动画</a></li>
                        <li role="presentation"><a href="#c10" aria-controls="home" role="tab" data-toggle="tab">CSS ...</a></li>
                        <li><h2><b>CSS3</b></h2></li>
                        <li role="presentation"><a href="#c11" aria-controls="home" role="tab" data-toggle="tab">CSS3 介绍</a></li>
                        <li role="presentation"><a href="#c12" aria-controls="home" role="tab" data-toggle="tab">CSS3 边框</a></li>
                        <li role="presentation"><a href="#c13" aria-controls="home" role="tab" data-toggle="tab">CSS3 圆角</a></li>
                        <li role="presentation"><a href="#c14" aria-controls="home" role="tab" data-toggle="tab">CSS3 渐变</a></li>
                        <li role="presentation"><a href="#c15" aria-controls="home" role="tab" data-toggle="tab">CSS3 2D 旋转</a></li>
                        <li role="presentation"><a href="#c16" aria-controls="home" role="tab" data-toggle="tab">CSS3 3D 旋转</a></li>
                        <li role="presentation"><a href="#c17" aria-controls="home" role="tab" data-toggle="tab">CSS3 过渡</a></li>
                        <li role="presentation"><a href="#c18" aria-controls="home" role="tab" data-toggle="tab">CSS3 多列</a></li>
                    </ul>
                    <div class="tab-content study_box">
                        <div role="tabpanel" class="tab-pane active" id="c1">
                            <div>
                                <h3>CSS 介绍</h3>
                                <hr>
                                <h4><b>什么是 CSS?</b></h4>
                                <ul>
                                    <li>CSS 指层叠样式表 (Cascading Style Sheets)</li>
                                    <li>样式定义<b>如何显示</b> HTML 元素</li>
                                    <li>样式通常存储在<b>样式表中</b></li>
                                    <li>把样式添加到 HTML 4.0 中，是为了<b>解决内容与表现分离的问题</b></li>
                                    <li><b>外部样式表</b>可以极大提高工作效率</li>
                                    <li>外部样式表通常存储在 <b>CSS 文件</b>中</li>
                                    <li>多个样式定义可<b>层叠</b>为一</li>
                                </ul>
                                <hr>
                                <h4><b>样式解决了一个很大的问题</b></h4>
                                <p>HTML 标签原本被设计为用于定义文档内容，如下实例：</p>
                                <p>&lt;h1&gt;这是一个标题&lt;/h1&gt;</p>
                                <p>&lt;p&gt;这是一个段落.&lt;/p&gt;</p>
                                <p>样式表定义如何显示 HTML 元素，就像 HTML 3.2 的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 .css 文件中。通过仅仅编辑一个简单的 CSS 文档，外部样式表使你有能力同时改变站点中所有页面的布局和外观。</p>
                                <p>为了解决这个问题，万维网联盟（W3C），这个非营利的标准化联盟，肩负起了 HTML 标准化的使命，并在 HTML 4.0 之外创造出样式（Style）。</p>
                                <p>当代浏览器都支持 CSS .</p>
                                <hr>
                                <h4><b>CSS 样式表极大地提高了工作效率</b></h4>
                                <p>样式表定义如何显示 HTML 元素</p>
                                <p>样式表定义如何显示 HTML 元素，就像 HTML 3.2 的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 .css 文件中。通过仅仅编辑一个简单的 CSS 文档，外部样式表使你有能力同时改变站点中所有页面的布局和外观。</p>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="c2">
                            <div>
                                <h3>CSS 语法</h3>
                                <hr>
                                <h4><b>CSS 实例</b></h4>
                                <p>CSS 规则由两个主要的部分构成：选择器，以及一条或多条声明:</p>
                                <img src="images/selector.gif" alt="">
                                <p>选择器通常是您需要改变样式的 HTML 元素。</p>
                                <p>每条声明由一个属性和一个值组成。</p>
                                <p>属性（property）是您希望设置的样式属性（style attribute）。每个属性有一个值。属性和值被冒号分开。</p>
                                <hr>
                                <h4><b>CSS 实例</b></h4>
                                <p>CSS声明总是以分号(;)结束，声明组以大括号({})括起来:</p>
                                <pre class="code">p {color:red;text-align:center;}</pre>
                                <p>为了让CSS可读性更强，你可以每行只描述一个属性:</p>
                                <pre class="code">p
{
    color:red;
    text-align:center;
}</pre>
                                <hr>
                                <h4><b>CSS 注释</b></h4>
                                <p>注释是用来解释你的代码，并且可以随意编辑它，浏览器会忽略它。</p>
                                <p>CSS注释以 "/*" 开始, 以 "*/" 结束, 实例如下:</p>
                                <pre class="code">/*这是个注释*/
p
{
    text-align:center;
    /*这是另一个注释*/
    color:black;
    font-family:arial;
}</pre>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="c3">
                            <div>
                                <h3>CSS Id 和 Class</h3>
                                <hr>
                                <h4><b>id 和 class 选择器</b></h4>
                                <p>如果你要在HTML元素中设置CSS样式，你需要在元素中设置"id" 和 "class"选择器。</p>
                                <hr>
                                <h4><b>id 选择器</b></h4>
                                <p>id 选择器可以为标有特定 id 的 HTML 元素指定特定的样式。</p>
                                <p>HTML元素以id属性来设置id选择器,CSS 中 id 选择器以 "#" 来定义。</p>
                                <p>以下的样式规则应用于元素属性 id="para1":</p>
                                <pre class="code">#para1
{
    text-align:center;
    color:red;
}</pre>
                                <p><span class="glyphicon glyphicon-exclamation-sign" style="color: yellow"></span> <b>ID属性不要以数字开头，数字开头的ID在 Mozilla/Firefox 浏览器中不起作用。</b></p>
                                <hr>
                                <h4><b>class 选择器</b></h4>
                                <p>class 选择器用于描述一组元素的样式，class 选择器有别于id选择器，class可以在多个元素中使用。</p>
                                <p>class 选择器在HTML中以class属性表示, 在 CSS 中，类选择器以一个点"."号显示：</p>
                                <p>在以下的例子中，所有拥有 center 类的 HTML 元素均为居中。</p>
                                <pre class="code">.center {text-align:center;}</pre>
                                <p>你也可以指定特定的HTML元素使用class。</p>
                                <p>在以下实例中, 所有的 p 元素使用 class="center" 让该元素的文本居中:</p>
                                <pre class="code">p.center {text-align:center;}</pre>
                                <p><span class="glyphicon glyphicon-exclamation-sign" style="color: yellow"></span> <b>类名的第一个字符不能使用数字！它无法在 Mozilla 或 Firefox 中起作用。</b></p>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="c4">
                            <div>
                                <h3>CSS 创建</h3>
                                <hr>
                                <p>当读到一个样式表时，浏览器会根据它来格式化 HTML 文档。</p>
                                <hr>
                                <h4><b>如何插入样式表</b></h4>
                                <p>插入样式表的方法有三种:</p>
                                <ul>
                                    <li>外部样式表</li>
                                    <li>内部样式表</li>
                                    <li>内联样式</li>
                                </ul>
                                <hr>
                                <h4><b>外部样式表</b></h4>
                                <p>当样式需要应用于很多页面时，外部样式表将是理想的选择。在使用外部样式表的情况下，你可以通过改变一个文件来改变整个站点的外观。每个页面使用 &lt;link&gt; 标签链接到样式表。 &lt;link&gt; 标签在（文档的）头部：</p>
                                <pre class="code">&lt;head&gt;
&lt;link rel="stylesheet" type="text/css" href="mystyle.css"&gt;
&lt;/head&gt;</pre>
                                <p>浏览器会从文件 mystyle.css 中读到样式声明，并根据它来格式文档。</p>
                                <p>外部样式表可以在任何文本编辑器中进行编辑。文件不能包含任何的 html 标签。样式表应该以 .css 扩展名进行保存。下面是一个样式表文件的例子：</p>
                                <pre class="code">hr {color:sienna;}
p {margin-left:20px;}
body {background-image:url("/images/back40.gif");}</pre>
                                <p><span class="glyphicon glyphicon-exclamation-sign" style="color: yellow"></span> <b>不要在属性值与单位之间留有空格（如："margin-left: 20 px" ），正确的写法是 "margin-left: 20px" 。</b></p>
                                <hr>
                                <h4><b>内部样式表</b></h4>
                                <p>当单个文档需要特殊的样式时，就应该使用内部样式表。你可以使用 &lt;style&gt; 标签在文档头部定义内部样式表，就像这样:</p>
                                <pre class="code">&lt;head&gt;
&lt;style&gt;
    hr {color:sienna;}
    p {margin-left:20px;}
    body {background-image:url("images/back40.gif");}
&lt;/style&gt;
&lr;/head&gt;</pre>
                                <hr>
                                <h4><b>内联样式</b></h4>
                                <p>由于要将表现和内容混杂在一起，内联样式会损失掉样式表的许多优势。请慎用这种方法，例如当样式仅需要在一个元素上应用一次时。</p>
                                <p>要使用内联样式，你需要在相关的标签内使用样式（style）属性。Style 属性可以包含任何 CSS 属性。本例展示如何改变段落的颜色和左外边距：</p>
                                <pre class="code">&lt;p style="color:sienna;margin-left:20px"&gt;This is a paragraph.&lt;/p&gt;</pre>
                                <hr>
                                <h4><b>多重样式</b></h4>
                                <p>如果某些属性在不同的样式表中被同样的选择器定义，那么属性值将从更具体的样式表中被继承过来。</p>
                                <p>例如，外部样式表拥有针对 h3 选择器的三个属性：</p>
                                <pre class="code">h3
{
    color:red;
    text-align:left;
    font-size:8pt;
}</pre>
                                <p>而内部样式表拥有针对 h3 选择器的两个属性：</p>
                                <pre class="code">h3
{
    text-align:left;
    font-size:8pt;
}</pre>
                                <p>假如拥有内部样式表的这个页面同时与外部样式表链接，那么 h3 得到的样式是：</p>
                                <pre class="code">color:red;
text-align:left;
font-size:8pt;</pre>
                                <p>即颜色属性将被继承于外部样式表，而文字排列（text-alignment）和字体尺寸（font-size）会被内部样式表中的规则取代。</p>
                                <hr>
                                <h4><b>多重样式将层叠为一个</b></h4>
                                <p>样式表允许以多种方式规定样式信息。样式可以规定在单个的 HTML 元素中，在 HTML 页的头元素中，或在一个外部的 CSS 文件中。甚至可以在同一个 HTML 文档内部引用多个外部样式表。</p>
                                <h5><b>层叠次序</b></h5>
                                <p>当同一个 HTML 元素被不止一个样式定义时，会使用哪个样式呢？</p>
                                <p>一般而言，所有的样式会根据下面的规则层叠于一个新的虚拟样式表中，其中数字 4 拥有最高的优先权。</p>
                                <ol>
                                    <li>浏览器缺省设置</li>
                                    <li>外部样式表</li>
                                    <li>内部样式表（位于 &lt;head&gt; 标签内部）</li>
                                    <li>内联样式（在 HTML 元素内部）</li>
                                </ol>
                                <p>因此，内联样式（在 HTML 元素内部）拥有最高的优先权，这意味着它将优先于以下的样式声明： 标签中的样式声明，外部样式表中的样式声明，或者浏览器中的样式声明（缺省值）。</p>
                                <p><span class="glyphicon glyphicon-exclamation-sign" style="color: yellow"></span> <b>提示:</b>如果你使用的外部文件样式在 <head>中也定义了该样式，则内部样式表会取代外部文件的样式。</p>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="c5">
                            <div>
                                <h3>CSS 背景</h3>
                                <hr>
                                <p>CSS 背景属性用于定义HTML元素的背景。</p>
                                <p>CSS 属性定义背景效果:</p>
                                <ul>
                                    <li>background-color</li>
                                    <li>background-image</li>
                                    <li>background-repeat</li>
                                    <li>background-attachment</li>
                                    <li>background-position</li>
                                </ul>
                                <hr>
                                <h4><b>背景颜色</b></h4>
                                <p>background-color 属性定义了元素的背景颜色.</p>
                                <p>页面的背景颜色使用在body的选择器中:</p>
                                <pre class="code">body {background-color:#b0c4de;}</pre>
                                <p>CSS中，颜色值通常以以下方式定义:</p>
                                <ul>
                                    <li>十六进制 - 如："#ff0000"</li>
                                    <li>RGB - 如："rgb(255,0,0)"</li>
                                    <li>颜色名称 - 如："red"</li>
                                </ul>
                                <p>以下实例中, h1, p, 和 div 元素拥有不同的背景颜色:</p>
                                <pre class="code">h1 {background-color:#6495ed;}
p {background-color:#e0ffff;}
div {background-color:#b0c4de;}</pre>
                                <hr>
                                <h4><b>背景图像</b></h4>
                                <p>background-image 属性描述了元素的背景图像.</p>
                                <p>默认情况下，背景图像进行平铺重复显示，以覆盖整个元素实体.</p>
                                <p>页面背景图片设置实例:</p>
                                <pre class="code">body {background-image:url('paper.gif');}</pre>
                                <hr>
                                <h4><b>背景图像 - 水平或垂直平铺</b></h4>
                                <p>默认情况下 background-image 属性会在页面的水平或者垂直方向平铺。</p>
                                <p>一些图像如果在水平方向与垂直方向平铺，这样看起来很不协调，如下所示:</p>
                                <pre class="code">body
{
    background-image:url('gradient2.png');
}</pre>
                                <p>如果图像只在水平方向平铺 (repeat-x)或竖直方向平铺 (repeat-y), 页面背景会更好些.</p>
                                <hr>
                                <h4><b>背景图像- 设置定位与不平铺</b></h4>
                                <p><span class="glyphicon glyphicon-exclamation-sign" style="color: yellow"></span> 让背景图像不影响文本的排版</p>
                                <p>如果你不想让图像平铺，你可以使用 background-repeat 属性:</p>
                                <pre class="code">body
{
    background-image:url('img_tree.png');
    background-repeat:no-repeat;
}</pre>
                                <p>以上实例中，背景图像与文本显示在同一个位置，为了让页面排版更加合理，不影响文本的阅读，我们可以改变图像的位置。</p>
                                <p>可以利用 background-position 属性改变图像在背景中的位置:</p>
                                <pre class="code">body
{
    background-image:url('img_tree.png');
    background-repeat:no-repeat;
    background-position:right top;
}</pre>
                                <hr>
                                <h4><b>背景- 简写属性</b></h4>
                                <p>在以上实例中我们可以看到页面的背景颜色通过了很多的属性来控制。</p>
                                <p>为了简化这些属性的代码，我们可以将这些属性合并在同一个属性中.</p>
                                <p>背景颜色的简写属性为 "background":</p>
                                <pre class="code">body {background:#ffffff url('img_tree.png') no-repeat right top;}</pre>
                                <p>当使用简写属性时，属性值的顺序为:</p>
                                <ul>
                                    <li>background-color</li>
                                    <li>background-image</li>
                                    <li>background-repeat</li>
                                    <li>background-attachment</li>
                                    <li>background-position</li>
                                </ul>
                                <p>以上属性无需全部使用，你可以按照页面的实际需要使用.</p>
                                <hr>
                                <h4><b>CSS 背景属性</b></h4>
                                <table class="table table-bordered" style="width: 800px">
                                    <tr class="success">
                                        <th>Property</th>
                                        <th>描述</th>
                                    </tr>
                                    <tr>
                                        <td>background</td>
                                        <td>简写属性，作用是将背景属性设置在一个声明中。</td>
                                    </tr>
                                    <tr class="info">
                                        <td>background-attachment</td>
                                        <td>背景图像是否固定或者随着页面的其余部分滚动。</td>
                                    </tr>
                                    <tr>
                                        <td>background-color</td>
                                        <td>设置元素的背景颜色。</td>
                                    </tr>
                                    <tr class="info">
                                        <td>background-image</td>
                                        <td>把图像设置为背景。</td>
                                    </tr>
                                    <tr>
                                        <td>background-position</td>
                                        <td>设置背景图像的起始位置。</td>
                                    </tr>
                                    <tr class="info">
                                        <td>background-repeat</td>
                                        <td>设置背景图像是否及如何重复。</td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="c6">
                            <div>
                                <h3>CSS 文本格式</h3>
                                <hr>
                                <div class="text">
                                    <h1>text formatting</h1>
                                    <p>This text is styled with some of the text formatting properties. The heading uses the text-align, text-transform, and color properties.
                                        The paragraph is indented, aligned, and the space between characters is specified. The underline is removed from the
                                        <a target="_blank" href="tryit.php?filename=trycss_text">&quot;Try it yourself&quot;</a> link.</p>
                                </div>
                                <hr>
                                <h4><b>文本颜色</b></h4>
                                <p>颜色属性被用来设置文字的颜色。</p>
                                <p>颜色是通过CSS最经常的指定：</p>
                                <ul>
                                    <li>十六进制值 - 如: ＃FF0000</li>
                                    <li>一个RGB值 - 如: RGB(255,0,0)</li>
                                    <li>颜色的名称 - 如: red</li>
                                </ul>
                                <p>一个网页的背景颜色是指在主体内的选择：</p>
                                <pre class="code">body {color:red;}
h1 {color:#00ff00;}
h2 {color:rgb(255,0,0);}</pre>
                                <p><span class="glyphicon glyphicon-exclamation-sign" style="color: yellow"></span>  对于W3C标准的CSS：如果你定义了颜色属性，你还必须定义背景色属性。</p>
                                <hr>
                                <h4><b>文本的对齐方式</b></h4>
                                <p>文本排列属性是用来设置文本的水平对齐方式。</p>
                                <p>文本可居中或对齐到左或右,两端对齐.</p>
                                <p>当text-align设置为"justify"，每一行被展开为宽度相等，左，右外边距是对齐（如杂志和报纸）。</p>
                                <pre class="code">h1 {text-align:center;}
p.date {text-align:right;}
p.main {text-align:justify;}</pre>
                                <hr>
                                <h4><b>文本修饰</b></h4>
                                <p>text-decoration 属性用来设置或删除文本的装饰。</p>
                                <p>从设计的角度看 text-decoration属性主要是用来删除链接的下划线：</p>
                                <pre class="code">a {text-decoration:none;}</pre>
                                <p>也可以这样装饰文字：</p>
                                <pre class="code">h1 {text-decoration:overline;}
h2 {text-decoration:line-through;}
h3 {text-decoration:underline;}</pre>
                                <p><span class="glyphicon glyphicon-exclamation-sign" style="color: yellow"></span> 我们不建议强调指出不是链接的文本，因为这常常混淆用户。</p>
                                <hr>
                                <h4><b>文本转换</b></h4>
                                <p>文本转换属性是用来指定在一个文本中的大写和小写字母。</p>
                                <p>可用于所有字句变成大写或小写字母，或每个单词的首字母大写。</p>
                                <pre class="code">p.uppercase {text-transform:uppercase;}
p.lowercase {text-transform:lowercase;}
p.capitalize {text-transform:capitalize;}</pre>
                                <p style="text-transform: uppercase">This is some text.</p>
                                <p style="text-transform: lowercase">This is some text.</p>
                                <p style="text-transform: capitalize">This is some text.</p>
                                <hr>
                                <h4><b>文本缩进</b></h4>
                                <p>文本缩进属性是用来指定文本的第一行的缩进。</p>
                                <pre class="code">p {text-indent:50px;}</pre>
                                <p style="text-indent: 50px">In my younger and more vulnerable years my father gave me some advice that I've been turning over in my mind ever since. 'Whenever you feel like criticizing anyone,' he told me, 'just remember that all the people in this world haven't had the advantages that you've had.'</p>
                                <hr>
                                <h4><b>所有CSS文本属性</b></h4>
                                <table class="table table-bordered" style="width: 800px">
                                    <tr class="success">
                                        <th>属性</th>
                                        <th>描述</th>
                                    </tr>
                                    <tr>
                                        <td>color</td>
                                        <td>设置文本颜色</td>
                                    </tr>
                                    <tr class="info">
                                        <td>direction</td>
                                        <td>设置文本方向</td>
                                    </tr>
                                    <tr>
                                        <td>letter-spacing</td>
                                        <td>设置字符间距</td>
                                    </tr>
                                    <tr class="info">
                                        <td>line-height</td>
                                        <td>设置行高</td>
                                    </tr>
                                    <tr>
                                        <td>text-align</td>
                                        <td>对齐元素中的文本</td>
                                    </tr>
                                    <tr class="info">
                                        <td>text-decoration</td>
                                        <td>向文本添加修饰</td>
                                    </tr>
                                    <tr>
                                        <td>text-indent</td>
                                        <td>缩进元素中文本的首行</td>
                                    </tr>
                                    <tr class="info">
                                        <td>text-shadow</td>
                                        <td>设置文本阴影</td>
                                    </tr>
                                    <tr>
                                        <td>text-transform</td>
                                        <td>控制元素中的字母</td>
                                    </tr>
                                    <tr class="info">
                                        <td>unicode-bidi</td>
                                        <td>设置或返回文本是否被重写 </td>
                                    </tr>
                                    <tr>
                                        <td>vertical-align</td>
                                        <td>设置元素的垂直对齐</td>
                                    </tr>
                                    <tr class="info">
                                        <td>white-space</td>
                                        <td>设置元素中空白的处理方式</td>
                                    </tr>
                                    <tr>
                                        <td>word-spacing</td>
                                        <td>设置字间距</td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="c7">
                            <div>
                                <h3>CSS 字体</h3>
                                <hr>
                                <p>CSS字体属性定义字体，加粗，大小，文字样式。</p>
                                <hr>
                                <h4><b>serif和sans-serif字体之间的区别</b></h4>
                                <img src="images/serif.gif" alt="">
                                <p><span class="glyphicon glyphicon-exclamation-sign" style="color: yellow"></span> 在计算机屏幕上，sans-serif字体被认为是比serif字体容易阅读</p>
                                <hr>
                                <h4><b>CSS字型</b></h4>
                                <p>在CSS中，有两种类型的字体系列名称：</p>
                                <ul>
                                    <li><b>通用字体系列</b> - 拥有相似外观的字体系统组合（如 "Serif" 或 "Monospace"）</li>
                                    <li><b>特定字体系列</b> - 一个特定的字体系列（如 "Times" 或 "Courier"）</li>
                                </ul>
                                <table class="table table-bordered" style="width: 800px">
                                    <tr class="success">
                                        <th>Generic family</th>
                                        <th>字体系列</th>
                                        <th>说明</th>
                                    </tr>
                                    <tr>
                                        <td>Serif</td>
                                        <td><span style="font-size:150%;font-family:Times New Roman">Times New Roman</span><br><span style="font-size:150%;font-family:Georgia">Georgia</span></td>
                                        <td>Serif字体中字符在行的末端拥有额外的装饰</td>
                                    </tr>
                                    <tr class="info">
                                        <td>Sans-serif</td>
                                        <td><span style="font-size:150%;font-family:Arial">Arial</span><br><span style="font-size:150%;font-family:Verdana">Verdana</span></td>
                                        <td>"Sans"是指无 - 这些字体在末端没有额外的装饰</td>
                                    </tr>
                                    <tr>
                                        <td>Monospace</td>
                                        <td><span style="font-size:150%;font-family:Courier New">Courier New</span><br><span style="font-size:150%;font-family:Lucida Console">Lucida Console</span></td>
                                        <td>所有的等宽字符具有相同的宽度</td>
                                    </tr>
                                </table>
                                <hr>
                                <h4><b>字体系列</b></h4>
                                <p>font-family 属性设置文本的字体系列。</p>
                                <p>font-family 属性应该设置几个字体名称作为一种"后备"机制，如果浏览器不支持第一种字体，他将尝试下一种字体。</p>
                                <p>注意: 如果字体系列的名称超过一个字，它必须用引号，如Font Family："宋体"。</p>
                                <p>多个字体系列是用一个逗号分隔指明：</p>
                                <pre class="code">p{font-family:"Times New Roman", Times, serif;}</pre>
                                <hr>
                                <h4><b>字体样式</b></h4>
                                <p>主要是用于指定斜体文字的字体样式属性。</p>
                                <p>这个属性有三个值：</p>
                                <ul>
                                    <li>正常 - 正常显示文本</li>
                                    <li>斜体 - 以斜体字显示的文字</li>
                                    <li>倾斜的文字 - 文字向一边倾斜（和斜体非常类似，但不太支持）</li>
                                </ul>
                                <pre class="code">p.normal {font-style:normal;}
p.italic {font-style:italic;}
p.oblique {font-style:oblique;}</pre>
                                <p style="font-style: normal">这是一个段落,正常。</p>
                                <p style="font-style: italic">这是一个段落,斜体。</p>
                                <p style="font-style: oblique">这是一个段落,斜体。</p>
                                <hr>
                                <h4><b>字体大小</b></h4>
                                <p>font-size 属性设置文本的大小。</p>
                                <p>能否管理文字的大小，在网页设计中是非常重要的。但是，你不能通过调整字体大小使段落看上去像标题，或者使标题看上去像段落。</p>
                                <p>请务必使用正确的HTML标签，就&lt;h1&gt; - &lt;h6&gt;表示标题和&lt;p&gt;表示段落：</p>
                                <p>字体大小的值可以是绝对或相对的大小。</p>
                                <p>绝对大小：</p>
                                <ul>
                                    <li>设置一个指定大小的文本</li>
                                    <li>不允许用户在所有浏览器中改变文本大小</li>
                                    <li>确定了输出的物理尺寸时绝对大小很有用</li>
                                </ul>
                                <p>相对大小：</p>
                                <ul>
                                    <li>相对于周围的元素来设置大小</li>
                                    <li>允许用户在浏览器中改变文字大小</li>
                                </ul>
                                <p><span class="glyphicon glyphicon-exclamation-sign" style="color: yellow"></span> 如果你不指定一个字体的大小，默认大小和普通文本段落一样，是16像素 <b>（16px=1em）</b>。</p>
                                <hr>
                                <h4><b>设置字体大小像素</b></h4>
                                <p>设置文字的大小与像素，让您完全控制文字大小：</p>
                                <pre class="code">h1 {font-size:40px;}
h2 {font-size:30px;}
p {font-size:14px;}</pre>
                                <p>上面的例子可以在 Internet Explorer 9, Firefox, Chrome, Opera, 和 Safari 中通过缩放浏览器调整文本大小。</p>
                                <p>虽然可以通过浏览器的缩放工具调整文本大小，但是，这种调整是整个页面，而不仅仅是文本</p>
                                <hr>
                                <h4><b>用em来设置字体大小</b></h4>
                                <p>为了避免Internet Explorer 中无法调整文本的问题，许多开发者使用 em 单位代替像素。</p>
                                <p>em的尺寸单位由W3C建议。</p>
                                <p>1em和当前字体大小相等。在浏览器中默认的文字大小是16px。</p>
                                <p>因此，1em的默认大小是16px。可以通过下面这个公式将像素转换为 <b>em：px/16=em</b></p>
                                <pre class="code">h1 {font-size:2.5em;} /* 40px/16=2.5em */
h2 {font-size:1.875em;} /* 30px/16=1.875em */
p {font-size:0.875em;} /* 14px/16=0.875em */</pre>
                                <p>在上面的例子，em的文字大小是与前面的例子中像素一样。不过，如果使用 em 单位，则可以在所有浏览器中调整文本大小。</p>
                                <p>不幸的是，仍然是IE浏览器的问题。调整文本的大小时，会比正常的尺寸更大或更小。</p>
                                <hr>
                                <h4><b>使用百分比和EM组合</b></h4>
                                <p>在所有浏览器的解决方案中，设置 &lt;body&gt; 元素的默认字体大小的是百分比：</p>
                                <pre class="code">body {font-size:100%;}
h1 {font-size:2.5em;}
h2 {font-size:1.875em;}
p {font-size:0.875em;}</pre>
                                <p>我们的代码非常有效。在所有浏览器中，可以显示相同的文本大小，并允许所有浏览器缩放文本的大小。</p>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="c8">
                            <div>
                                <h3>CSS 链接</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="c9">
                            <div>
                                <h3>CSS 动画</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="c10">...</div>
                        <div role="tabpanel" class="tab-pane" id="c11">
                            <div>
                                <h3>CSS3 介绍</h3>
                                <hr>
                                <p>CSS 用于控制网页的样式和布局。</p>
                                <p>CSS3 是最新的 CSS 标准。</p>
                                <img src="images/transforms.gif" alt="">
                                <hr>
                                <h4><b>CSS3 模块</b></h4>
                                <p>CSS3被拆分为"模块"。旧规范已拆分成小块，还增加了新的。</p>
                                <p>一些最重要CSS3模块如下：</p>
                                <ul>
                                    <li>选择器</li>
                                    <li>盒模型</li>
                                    <li>背景和边框</li>
                                    <li>文字特效</li>
                                    <li>2D/3D转换</li>
                                    <li>动画</li>
                                    <li>多列布局</li>
                                    <li>用户界面</li>
                                </ul>
                                <hr>
                                <h4><b>CSS3 建议</b></h4>
                                <p>W3C的CSS3规范仍在开发。</p>
                                <p>但是，许多新的CSS3属性已在现代浏览器使用。</p>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="c12">
                            <div>
                                <h3>CSS3 边框</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="c13">
                            <div>
                                <h3>CSS3 圆角</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="c14">
                            <div>
                                <h3>CSS3 渐变</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="c15">
                            <div>
                                <h3>CSS3 2D 旋转</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="c16">
                            <div>
                                <h3>CSS3 3D 旋转</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="c17">
                            <div>
                                <h3>CSS3 过渡</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="c18">
                            <div>
                                <h3>CSS3 多列</h3>
                                <hr>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div role="tabpanel" class="tab-pane" id="javascript">
                <div>
                    <ul class="nav nav-pills study_nav" role="tablist">
                        <li><h2><b>Javascript</b></h2></li>
                        <li role="presentation" class="active"><a href="#j1" aria-controls="home" role="tab" data-toggle="tab">Javascript 介绍</a></li>
                        <li role="presentation"><a href="#j2" aria-controls="home" role="tab" data-toggle="tab">Javascript 用法</a></li>
                        <li role="presentation"><a href="#j3" aria-controls="home" role="tab" data-toggle="tab">Javascript 输出</a></li>
                        <li role="presentation"><a href="#j4" aria-controls="home" role="tab" data-toggle="tab">Javascript 语法</a></li>
                        <li role="presentation"><a href="#j5" aria-controls="home" role="tab" data-toggle="tab">Javascript 语句</a></li>
                        <li role="presentation"><a href="#j6" aria-controls="home" role="tab" data-toggle="tab">Javascript 注释</a></li>
                        <li role="presentation"><a href="#j7" aria-controls="home" role="tab" data-toggle="tab">Javascript 变量</a></li>
                        <li role="presentation"><a href="#j8" aria-controls="home" role="tab" data-toggle="tab">Javascript 数据类型</a></li>
                        <li role="presentation"><a href="#j9" aria-controls="home" role="tab" data-toggle="tab">Javascript 对象</a></li>
                        <li role="presentation"><a href="#j10" aria-controls="home" role="tab" data-toggle="tab">Javascript 函数</a></li>
                        <li role="presentation"><a href="#j11" aria-controls="home" role="tab" data-toggle="tab">Javascript 作用域</a></li>
                        <li role="presentation"><a href="#j12" aria-controls="home" role="tab" data-toggle="tab">Javascript 事件</a></li>
                        <li role="presentation"><a href="#j13" aria-controls="home" role="tab" data-toggle="tab">Javascript 字符串</a></li>
                        <li role="presentation"><a href="#j14" aria-controls="home" role="tab" data-toggle="tab">Javascript 运算符</a></li>
                        <li role="presentation"><a href="#j15" aria-controls="home" role="tab" data-toggle="tab">Javascript 比较</a></li>
                        <li role="presentation"><a href="#j16" aria-controls="home" role="tab" data-toggle="tab">Javascript 条件语句</a></li>
                        <li role="presentation"><a href="#j17" aria-controls="home" role="tab" data-toggle="tab">Javascript switch 语句</a></li>
                        <li role="presentation"><a href="#j18" aria-controls="home" role="tab" data-toggle="tab">Javascript for 循环</a></li>
                        <li role="presentation"><a href="#j19" aria-controls="home" role="tab" data-toggle="tab">Javascript while 循环</a></li>
                        <li role="presentation"><a href="#j20" aria-controls="home" role="tab" data-toggle="tab">Javascript Break 和 Continue 语句</a></li>
                        <li role="presentation"><a href="#j21" aria-controls="home" role="tab" data-toggle="tab">Javascript typeof</a></li>
                        <li role="presentation"><a href="#j22" aria-controls="home" role="tab" data-toggle="tab">Javascript 类型转换</a></li>
                        <li role="presentation"><a href="#j23" aria-controls="home" role="tab" data-toggle="tab">Javascript 错误</a></li>
                    </ul>
                    <div class="tab-content study_box">
                        <div role="tabpanel" class="tab-pane active" id="j1">
                            <div>
                                <div>
                                    <div style="float: left;padding-top: 10px;">
                                        <img src="images/JavaScript.gif" style="width: 300px" alt="">
                                    </div>
                                    <div style="float: left;padding-top: 50px;">
                                        <p>JavaScript 是 Web 的编程语言。</p>
                                        <p>所有现代的 HTML 页面都使用 JavaScript。</p>
                                        <p>JavaScript 非常容易学。</p>
                                        <p>本教程将教你学习从初级到高级JavaScript知识。</p>
                                    </div>
                                </div>
                                <div style="clear: left"></div>
                                <hr>
                                <h4><b>我的第一个 JavaScript 程序</b></h4>
                                <script>
                                    function displayDate(){
                                        document.getElementById("demo_time").innerHTML=Date();
                                    }
                                </script>
                                <p id="demo_time">这是一个段落</p>
                                <button type="button" onclick="displayDate()" class="btn btn-info">显示日期</button>
                                <hr>
                                <h4><b>为什么学习 JavaScript?</b></h4>
                                <p>JavaScript web 开发人员必须学习的 3 门语言中的一门：</p>
                                <ol>
                                    <li>HTML 定义了网页的内容</li>
                                    <li>CSS 描述了网页的布局</li>
                                    <li>JavaScript 网页的行为</li>
                                </ol>
                                <p>本教程是关于 JavaScript 及介绍 JavaScript 如何与 HTML 和 CSS 一起工作。</p>
                                <hr>
                                <h4><b>阅读本教程前，您需要了解的知识：</b></h4>
                                <p>阅读本教程，您需要有以下基础：</p>
                                <ul>
                                    <li><b>HTML 和 CSS 基础</b></li>
                                </ul>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j2">
                            <div>
                                <h3>Javascript 用法</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j3">
                            <div>
                                <h3>Javascript 输出</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j4">
                            <div>
                                <h3>Javascript 语法</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j5">
                            <div>
                                <h3>Javascript 语句</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j6">
                            <div>
                                <h3>Javascript 注释</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j7">
                            <div>
                                <h3>Javascript 变量</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j8">
                            <div>
                                <h3>Javascript 数据类型</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j9">
                            <div>
                                <h3>Javascript 对象</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j10">
                            <div>
                                <h3>Javascript 函数</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j11">
                            <div>
                                <h3>Javascript 作用域</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j12">
                            <div>
                                <h3>Javascript 事件</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j13">
                            <div>
                                <h3>Javascript 字符串</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j14">
                            <div>
                                <h3>Javascript 运算符</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j15">
                            <div>
                                <h3>Javascript 比较</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j16">
                            <div>
                                <h3>Javascript 条件语句</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j17">
                            <div>
                                <h3>Javascript switch 语句</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j18">
                            <div>
                                <h3>Javascript for 循环</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j19">
                            <div>
                                <h3>Javascript while 循环</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j20">
                            <div>
                                <h3>Javascript Break 和 Continue 语句</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j21">
                            <div>
                                <h3>Javascript typeof</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j22">
                            <div>
                                <h3>Javascript 类型转换</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="j23">
                            <div>
                                <h3>Javascript 错误</h3>
                                <hr>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div role="tabpanel" class="tab-pane" id="database">
                <div>
                    <ul class="nav nav-pills study_nav" role="tablist">
                        <li><h2><b>数据库</b></h2></li>
                        <li role="presentation" class="active"><a href="#s1" aria-controls="home" role="tab" data-toggle="tab">MongoDB 简介</a></li>
                        <li role="presentation"><a href="#s2" aria-controls="home" role="tab" data-toggle="tab">NoSQL 简介</a></li>
                        <li role="presentation"><a href="#s3" aria-controls="home" role="tab" data-toggle="tab">Windows MongoDB</a></li>
                        <li role="presentation"><a href="#s4" aria-controls="home" role="tab" data-toggle="tab">Linux MongoDB</a></li>
                        <li role="presentation"><a href="#s5" aria-controls="home" role="tab" data-toggle="tab">OSX MongoDB</a></li>
                        <li role="presentation"><a href="#s6" aria-controls="home" role="tab" data-toggle="tab">MongoDB 概念解析</a></li>
                        <li role="presentation"><a href="#s7" aria-controls="home" role="tab" data-toggle="tab">MongoDB 链接</a></li>
                        <li role="presentation"><a href="#s8" aria-controls="home" role="tab" data-toggle="tab">MongoDB 创建数据库</a></li>
                        <li role="presentation"><a href="#s9" aria-controls="home" role="tab" data-toggle="tab">MongoDB 删除数据库</a></li>
                        <li role="presentation"><a href="#s10" aria-controls="home" role="tab" data-toggle="tab">MongoDB 文档</a></li>
                        <li role="presentation"><a href="#s11" aria-controls="home" role="tab" data-toggle="tab">MongoDB 条件操作符</a></li>
                        <li role="presentation"><a href="#s12" aria-controls="home" role="tab" data-toggle="tab">MongoDB $type 操作符</a></li>
                        <li role="presentation"><a href="#s13" aria-controls="home" role="tab" data-toggle="tab">Node.js MongoDB</a></li>
                    </ul>
                    <div class="tab-content study_box">
                        <div role="tabpanel" class="tab-pane active" id="s1">
                            <div>
                                <h3>MongoDB 简介</h3>
                                <div>
                                    <div style="float: left;padding-top: 10px;">
                                        <img src="images/mongodb-logo.png" style="width: 300px" alt="">
                                    </div>
                                    <div style="float: left;padding-top: 10px;padding-left: 20px">
                                        <p>JavaScript 是 Web 的编程语言。</p>
                                        <p>所有现代的 HTML 页面都使用 JavaScript。</p>
                                        <p>JavaScript 非常容易学。</p>
                                        <p>本教程将教你学习从初级到高级JavaScript知识。</p>
                                    </div>
                                    <div style="clear: left"></div>
                                </div>
                                <hr>
                                <h4><b>什么是MongoDB ?</b></h4>
                                <p>MongoDB 是由C++语言编写的，是一个基于分布式文件存储的开源数据库系统。</p>
                                <p>在高负载的情况下，添加更多的节点，可以保证服务器性能。</p>
                                <p>MongoDB 旨在为WEB应用提供可扩展的高性能数据存储解决方案。</p>
                                <p>MongoDB 将数据存储为一个文档，数据结构由键值(key=>value)对组成。MongoDB 文档类似于 JSON 对象。字段值可以包含其他文档，数组及文档数组。</p>
                                <img src="images/crud-annotated-document.png" alt="">
                                <hr>
                                <h4><b>主要特点</b></h4>
                                <ul>
                                    <li>MongoDB的提供了一个面向文档存储，操作起来比较简单和容易。</li>
                                    <li>你可以在MongoDB记录中设置任何属性的索引 (如：FirstName="Sameer",Address="8 Gandhi Road")来实现更快的排序。</li>
                                    <li>你可以通过本地或者网络创建数据镜像，这使得MongoDB有更强的扩展性。</li>
                                    <li>如果负载的增加（需要更多的存储空间和更强的处理能力） ，它可以分布在计算机网络中的其他节点上这就是所谓的分片。</li>
                                    <li>Mongo支持丰富的查询表达式。查询指令使用JSON形式的标记，可轻易查询文档中内嵌的对象及数组。</li>
                                    <li>MongoDb 使用update()命令可以实现替换完成的文档（数据）或者一些指定的数据字段 。</li>
                                    <li>Mongodb中的Map/reduce主要是用来对数据进行批量处理和聚合操作。</li>
                                    <li>Map和Reduce。Map函数调用emit(key,value)遍历集合中所有的记录，将key与value传给Reduce函数进行处理。</li>
                                    <li>Map函数和Reduce函数是使用Javascript编写的，并可以通过db.runCommand或mapreduce命令来执行MapReduce操作。</li>
                                    <li>GridFS是MongoDB中的一个内置功能，可以用于存放大量小文件。</li>
                                    <li>MongoDB允许在服务端执行脚本，可以用Javascript编写某个函数，直接在服务端执行，也可以把函数的定义存储在服务端，下次直接调用即可。</li>
                                    <li>MongoDB支持各种编程语言:RUBY，PYTHON，JAVA，C++，PHP，C#等多种语言。</li>
                                    <li>MongoDB安装简单。</li>
                                </ul>
                                <hr>
                                <h5>历史</h5>
                                <p>2007年10月，MongoDB由10gen团队所发展。2009年2月首度推出。</p>
                                <ul>
                                    <li>2012年05月23日，MongoDB2.1 开发分支发布了! 该版本采用全新架构，包含诸多增强。</li>
                                    <li>2012年06月06日，MongoDB 2.0.6 发布，分布式文档数据库。</li>
                                    <li>2013年04月23日，MongoDB 2.4.3 发布，此版本包括了一些性能优化，功能增强以及bug修复。</li>
                                    <li>2013年08月20日，MongoDB 2.4.6 发布，是目前最新的稳定版。</li>
                                </ul>
                                <hr>
                                <h4><b>MongoDB 下载</b></h4>
                                <p>你可以在mongodb官网下载该安装包，地址为：<a href="https://www.mongodb.com/download-center#community">https://www.mongodb.com/download-center#community。</a></p>
                                <p>MonggoDB支持以下平台:</p>
                                <ul>
                                    <li>OS X 32-bit</li>
                                    <li>OS X 64-bit</li>
                                    <li>Linux 32-bit</li>
                                    <li>Linux 64-bit</li>
                                    <li>Windows 32-bit</li>
                                    <li>Windows 64-bit</li>
                                    <li>Solaris i86pc</li>
                                    <li>Solaris 64</li>
                                </ul>
                                <hr>
                                <h4><b>语言支持</b></h4>
                                <p>MongoDB有官方的驱动如下：</p>
                                <ul>
                                    <li>C</li>
                                    <li>C++</li>
                                    <li>C# / .NET</li>
                                    <li>Erlang</li>
                                    <li>Haskell</li>
                                    <li>Java</li>
                                    <li>JavaScript</li>
                                    <li>Lisp</li>
                                    <li>node.JS</li>
                                    <li>Perl</li>
                                    <li>PHP</li>
                                    <li>Python</li>
                                    <li>Ruby</li>
                                    <li>Scala</li>
                                </ul>
                                <hr>
                                <h4><b>MongoDB 工具</b></h4>
                                <p>有几种可用于MongoDB的管理工具。</p>
                                <h5><b>监控</b></h5>
                                <p>MongoDB提供了网络和系统监控工具Munin，它作为一个插件应用于MongoDB中。</p>
                                <p>Gangila是MongoDB高性能的系统监视的工具，它作为一个插件应用于MongoDB中。</p>
                                <p>基于图形界面的开源工具 Cacti, 用于查看CPU负载, 网络带宽利用率,它也提供了一个应用于监控 MongoDB 的插件。</p>
                                <h5><b>GUI</b></h5>
                                <ul>
                                    <li>Fang of Mongo – 网页式,由Django和jQuery所构成。</li>
                                    <li>Futon4Mongo – 一个CouchDB Futon web的mongodb山寨版。</li>
                                    <li>Mongo3 – Ruby写成。</li>
                                    <li>MongoHub – 适用于OSX的应用程序。</li>
                                    <li>Opricot – 一个基于浏览器的MongoDB控制台, 由PHP撰写而成。</li>
                                    <li>Database Master — Windows的mongodb管理工具</li>
                                    <li>RockMongo — 最好的PHP语言的MongoDB管理工具，轻量级, 支持多国语言.</li>
                                </ul>
                                <hr>
                                <h4><b>MongoDB 应用案例</b></h4>
                                <p>下面列举一些公司MongoDB的实际应用：</p>
                                <ul>
                                    <li>Craiglist上使用MongoDB的存档数十亿条记录。</li>
                                    <li>FourSquare，基于位置的社交网站，在Amazon EC2的服务器上使用MongoDB分享数据。</li>
                                    <li>Shutterfly，以互联网为基础的社会和个人出版服务，使用MongoDB的各种持久性数据存储的要求。</li>
                                    <li>bit.ly, 一个基于Web的网址缩短服务，使用MongoDB的存储自己的数据。</li>
                                    <li>spike.com，一个MTV网络的联营公司， spike.com使用MongoDB的。</li>
                                    <li>Intuit公司，一个为小企业和个人的软件和服务提供商，为小型企业使用MongoDB的跟踪用户的数据。</li>
                                    <li>sourceforge.net，资源网站查找，创建和发布开源软件免费，使用MongoDB的后端存储。</li>
                                    <li>etsy.com ，一个购买和出售手工制作物品网站，使用MongoDB。</li>
                                    <li>纽约时报，领先的在线新闻门户网站之一，使用MongoDB。</li>
                                    <li>CERN，著名的粒子物理研究所，欧洲核子研究中心大型强子对撞机的数据使用MongoDB。</li>
                                </ul>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="s2">
                            <div>
                                <h3>NoSQL 简介</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="s3">
                            <div>
                                <h3>Windows MongoDB</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="s4">
                            <div>
                                <h3>Linux MongoDB</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="s5">
                            <div>
                                <h3>OSX MongoDB</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="s6">
                            <div>
                                <h3>MongoDB 概念解析</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="s7">
                            <div>
                                <h3>MongoDB 链接</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="s8">
                            <div>
                                <h3>MongoDB 创建数据库</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="s9">
                            <div>
                                <h3>MongoDB 删除数据库</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="s10">
                            <div>
                                <h3>MongoDB 文档</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="s11">
                            <div>
                                <h3>MongoDB 条件操作符</h3>
                                <hr>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="s12">
                        <div>
                            <h3>MongoDB $type 操作符</h3>
                            <hr>
                        </div>
                    </div>
                        <div role="tabpanel" class="tab-pane" id="s13">
                            <div>
                                <h3>Node.js MongoDB</h3>
                                <hr>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div role="tabpanel" class="tab-pane" id="tools">
                <div>
                    <ul class="nav nav-pills study_nav" role="tablist">
                        <li><h2><b>开发工具</b></h2></li>
                        <li role="presentation" class="active"><a href="#t1" aria-controls="home" role="tab" data-toggle="tab">工具23</a></li>
                        <li role="presentation"><a href="#t2" aria-controls="home" role="tab" data-toggle="tab">工具1</a></li>
                    </ul>
                    <div class="tab-content study_box">
                        <div role="tabpanel" class="tab-pane active" id="t1">121</div>
                        <div role="tabpanel" class="tab-pane" id="t2">212</div>
                    </div>
                </div>
            </div>
            <div role="tabpanel" class="tab-pane" id="text">
                <div>
                    <ul class="nav nav-pills study_nav" role="tablist">
                        <li><h2><b>笔记与实例</b></h2></li>
                        <li role="presentation" class="active"><a href="#b1" aria-controls="home" role="tab" data-toggle="tab">HTML 笔记</a></li>
                        <li role="presentation"><a href="#b2" aria-controls="home" role="tab" data-toggle="tab">CSS 笔记</a></li>
                        <li role="presentation"><a href="#b3" aria-controls="home" role="tab" data-toggle="tab">Javascript 笔记</a></li>
                    </ul>
                    <div class="tab-content study_box">
                        <div role="tabpanel" class="tab-pane active" id="b1">121</div>
                        <div role="tabpanel" class="tab-pane" id="b2">212</div>
                        <div role="tabpanel" class="tab-pane" id="b3">212</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>